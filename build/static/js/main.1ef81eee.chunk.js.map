{"version":3,"sources":["Images/line_w.png","setupFirebase.js","Top.js","SetList.js","Home.js","SignUp.js","SignIn.js","Title.js","Description.js","IndividualCard.js","CardsetEdit.js","CardsetAnswer.js","Category.js","NewCardSet.js","NoMatch.js","App.js","serviceWorker.js","index.js","Images/flashcardsbg.jpg"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","Top","props","state","cardSetsDefault","isSignedIn","Action","action","to","user","entryId","id","src","require","alt","width","height","className","icon","faUserCog","size","color","React","Component","SetList","cards","this","editable","Tiles","length","map","set","index","Col","data","category","md","xs","lg","key","xl","Card","Body","replace","title","description","db","firestore","Home","yourCards","unregisterAuthObserver","auth","onAuthStateChanged","default","collection","onSnapshot","snapshot","setState","docs","uid","currentUser","doc","console","log","Helmet","charSet","Container","fluid","Row","UserRegistration","axios","post","then","res","status","EmailValidation","exist","SignUp","handleOnChangeEmail","e","email","target","value","handleOnChangePassword","password","handleOnBlur","a","isEmailTaken","email_taken","error_email_exists","onSubmit","preventDefault","register","error","pathname","Button","href","TextField","label","variant","onChange","onBlur","helperText","required","type","autoComplete","onClick","disabled","LoginService","SignIn","sign_up_reqd","error_sign_up_reqd","wrong_password","loginResult","loginSuccess","forceUpdate","Alert","severity","Title","titleRef","createRef","updateTitle","text","defaultValue","ref","minLength","maxLength","placeholder","current","buttonText","alert","Description","descRef","updateDesc","descriptionVal","descAlert","IndividualCard","sideA","sideB","updateSideA","updateSideB","deleteCard","card","class","CardsetEdit","currentCards","match","params","urlString","n","name","update","unsubscribe","orderBy","get","val","changer","delete","add","answered","correct","created","Date","List","bind","addCard","CardsetAnswer","shuffled","currentSide","cardsAnswered","cardsCorrect","complete","flips","endButton","holder","location","indexOf","shuffle","exists","history","push","shuffledCards","sort","Math","random","b","x","i","ans","endStudy","CardSide","flip","parseFloat","toFixed","nextCard","Category","dropdownChanged","NewCardSet","cardSetId","toLowerCase","setTimeout","createSet","entryString","string","checkExists","body","userId","response","_id","emptyCard","setId","catch","headers","request","message","App","exact","path","component","componyent","NoMatch","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ef81eee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/line_w.25f79b17.png\";","import firebase from 'firebase';\r\n// Required for side-effects\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: 'AIzaSyDCeQIhbuvK-nWNhBZ_FwgrklePo2AbZA4',\r\n    authDomain: 'rf-app-journal.firebaseapp.com',\r\n    projectId: 'rf-app-journal'\r\n});\r\n","import React from \"react\";\r\nimport { faBrain } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUserCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Top extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardSetsDefault: [],\r\n      isSignedIn: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const Action = () => {\r\n      if (this.props.action === \"create\") {\r\n        return <Link to={`/new`}>Create a set +</Link>;\r\n      }\r\n      if (this.props.action === \"cancel\") {\r\n        return <Link to={`/home`}>Main Menu </Link>;\r\n      }\r\n      if (this.props.user === true && this.props.action === \"start\") {\r\n        return (\r\n          <Link to={`/set/yours/${this.props.entryId}/`}>Test these cards</Link>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div id=\"top\">\r\n        <div >\r\n          <Link to={`/flashcards/home`}>\r\n            {/* <FontAwesomeIcon icon={faBrain} size=\"lg\" color=\"#ffffff\" /> */}\r\n            <img src={require('./Images/line_w.png')} alt=\"Logo\"  width=\"15%\" height=\"15%\"/>\r\n           \r\n          </Link>\r\n        </div>\r\n       \r\n        <div className=\"role\" >\r\n          <Link to={`/flashcards/Role`}>\r\n         <FontAwesomeIcon icon={faUserCog} size=\"lg\" color=\"#ffffff\" /> \r\n           </Link>\r\n         </div>\r\n        {/* <div>{this.props.title}</div> */}\r\n        <div className=\"action\">\r\n          <Action />\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Card, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class SetList extends React.Component {\r\n  render() {\r\n    const cards = this.props.cards;\r\n    const editable = this.props.editable;\r\n    const Tiles = () => {\r\n      if (cards.length > 0) {\r\n        return cards.map((set, index) => (\r\n          <Col\r\n            className={`h-100 ${set.data().category}`}\r\n            md={6}\r\n            xs={12}\r\n            lg={4}\r\n            key={index}\r\n            xl={3}\r\n          >\r\n            <Card>\r\n              <Card.Body>\r\n                <h4>{set.data().category.replace(\"-\", \" \")}</h4>\r\n                <h2>{set.data().title}</h2>\r\n                <p>{set.data().description}</p>\r\n                <p className=\"source\">\r\n                  {this.props.editable\r\n                    ? \"Created by you\"\r\n                    : \"Created by BrainKwik\"}\r\n                </p>\r\n                <div className=\"buttons\">\r\n                  <Link\r\n                    to={\r\n                      editable === false\r\n                        ? `/set/${set.id}`\r\n                        : `/set/yours/${set.id}`\r\n                    }\r\n                  >\r\n                    <div className=\"button\">Test Yourself</div>\r\n                  </Link>\r\n                  {this.props.editable === true ? (\r\n                    <Link to={`/set/yours/${set.id}/edit`}>\r\n                      <div className=\"button\">Edit this set</div>\r\n                    </Link>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ));\r\n      } else {\r\n        return <></>;\r\n      }\r\n    };\r\n\r\n    return <Tiles />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport Top from \"./Top\";\r\nimport SetList from \"./SetList\";\r\nimport { Card, Col, Row, Container } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardSetsDefault: [],\r\n      isSignedIn: false,\r\n      yourCards: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => {\r\n      this.default = db.collection(\"defaultcards\").onSnapshot((snapshot) => {\r\n        this.setState({\r\n          cardSetsDefault: snapshot.docs,\r\n        });\r\n      });\r\n\r\n      this.setState({ isSignedIn: !!user }, () => {\r\n        const uid = firebase.auth().currentUser.uid;\r\n        this.yourCards = db\r\n          .collection(\"users\")\r\n          .doc(uid)\r\n          .collection(\"yourCards\")\r\n          .onSnapshot((snapshot) => {\r\n            console.log(1);\r\n            this.setState({\r\n              yourCards: snapshot.docs,\r\n            });\r\n          });\r\n      });\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.default) {\r\n      this.default();\r\n    }\r\n    if (this.yourCards) {\r\n      this.yourCards();\r\n    }\r\n  }\r\n  render() {\r\n    const cardSetsDefault = this.state.cardSetsDefault;\r\n    const yourCards = this.state.yourCards;\r\n\r\n    const { isSignedIn } = this.state;\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Flashcards</title>\r\n        </Helmet>\r\n        <Top title={\"FlashCards\"} action={\"create\"} />\r\n        <Container fluid>\r\n          <div className=\"content\">\r\n            <h1>Create a set or test yourself</h1>\r\n            <Row>\r\n              {isSignedIn && (\r\n                <Col className=\"new h-100\" md={12} xs={12} lg={4} xl={6}>\r\n                  <Link to={`/new`}>\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <h2>Create a new cardset</h2>\r\n                        <h3>Easy learning in a flash</h3>\r\n                        <div className=\"addSet\">+</div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Link>\r\n                </Col>\r\n              )}\r\n              {isSignedIn && (\r\n                <SetList cards={cardSetsDefault} editable={false} />\r\n              )}\r\n              {isSignedIn && <SetList cards={yourCards} editable={true} />}\r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport firebase from \"firebase\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { faBrain } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n// //SignUp service connect express login/SignUp route to user entered data\r\n// const UserRegistration = data => {\r\n//   return axios.post(`${process.env.REACT_APP_BASEURI}/login/signup`, data)\r\n//       .then(res => res.status);\r\n// };\r\n\r\n// //User Validation service connect express login/user route to check user entered data \r\n// export const UserValidation = data => (\r\n//   axios.post(`${process.env.REACT_APP_BASEURI}/login/user`, data)\r\n//   .then(exist => exist.status)\r\n// )\r\n\r\n// //Email Vaidation service connect express login/emailcheck route to check user entered email ..to not allow duplicate email entried  \r\n// export const EmailValidation = data => (\r\n//   axios.post(`${process.env.REACT_APP_BASEURI}/login/emailcheck`, data)\r\n//   .then(exist => exist.status)\r\n// )\r\n\r\n//SignUp service connect express login/SignUp route to user entered data\r\nconst UserRegistration = data => {\r\n\r\n  return axios.post('http://localhost:5000/login/signup', data)\r\n      .then(res => res.status);\r\n};\r\n\r\n//User Vaidation service connect express login/user route to check user entered data \r\nexport const UserValidation = data => (\r\n  axios.post('http://localhost:5000/login/user', data)\r\n  .then(exist => exist.status)\r\n)\r\n\r\n//Email Vaidation service connect express login/emailcheck route to check user entered email ..to not allow duplicate email entried  \r\nexport const EmailValidation = data => (\r\n  axios.post('http://localhost:5000/login/emailcheck', data)\r\n  .then(exist => exist.status)\r\n)\r\n\r\nclass SignUp extends React.Component {\r\n  \r\n\r\n  //Saving SignUp State\r\n  constructor (props) \r\n  {\r\n    super (props);\r\n    this.state = \r\n    {\r\n      email: '',\r\n      password: '',\r\n      register:false,\r\n      error:false,\r\n    };\r\n  }\r\n\r\n  //Saving Email and Password Entered values to states \r\n  handleOnChangeEmail = e => \r\n  {\r\n    this.setState \r\n    ({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnChangePassword = e => \r\n  {\r\n    this.setState \r\n    ({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnBlur = async e => {\r\n    this.setState ({\r\n      email: e.target.value,\r\n    });\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n    const isEmailTaken = await EmailValidation (data);\r\n\r\n    isEmailTaken === 204\r\n      ?  this.setState ({email_taken: true} )\r\n      : this.setState ({email_taken: false} );\r\n\r\n      isEmailTaken === 204\r\n      ?  this.setState ({error_email_exists:\"Email already exists. Try Login Instead!\"})\r\n      : this.setState ({error_email_exists:\"\"});\r\n  };\r\n\r\n  //On Submit button click sending data from saved state to express Login/signup routes \r\n  onSubmit = async e => \r\n  {\r\n    e.preventDefault ();\r\n    const data = \r\n    {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const registerStatus = await UserRegistration (data);\r\n     if (registerStatus === 200) \r\n     {\r\n      this.setState \r\n      ({\r\n        email: '',\r\n        password: '',\r\n        register: true,\r\n        error: false,\r\n      });\r\n     }\r\n     else\r\n      this.setState \r\n      ({\r\n        error: true,\r\n        register: false,\r\n      });\r\n  };\r\n\r\n  // Configure FirebaseUI.\r\n\r\n  // uiConfig = {\r\n  //   signInFlow: \"popup\",\r\n  //   signInOptions: [\r\n  //     firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n  //     firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n  //   ],\r\n  //   callbacks: {\r\n  //     signInSuccessWithAuthResult: () => {\r\n  //       setTimeout(this.props.history.push(\"/home\"), 1000);\r\n  //     },\r\n  //   },\r\n  // };\r\n  render() {\r\n    const {register, error, email_taken, error_email_exists}=this.state; \r\n    if (this.state.register ) {\r\n      return <Redirect to = {{ pathname: \"/new\" }} />;\r\n    } \r\n    if (!this.props.isSignedIn ) {\r\n      return (\r\n        <Container fluid className=\"login\">\r\n          <div id=\"welcome\">       \r\n          </div>\r\n          <div id=\"signup\">\r\n            <Row className={`justify-content-center`}>\r\n              <Col>\r\n              <div id=\"welcome\">\r\n              <h1></h1>\r\n                <img src={require('./Images/flashcardsbg.jpg')} alt=\"Logo\"  width=\"100%\" height=\"100%\" />\r\n               </div>\r\n              </Col>\r\n              <Col className={`h-100`} md={6} xs={12} lg={6} xl={6}>\r\n                <h7> <Button  href=\"#text-buttons\">LOGIN</Button>\r\n                </h7>\r\n                <h4>SIGN-UP</h4>\r\n                {/* <StyledFirebaseAuth\r\n                  uiConfig={this.uiConfig}\r\n                  firebaseAuth={firebase.auth()}\r\n                /> */}\r\n              <br/>\r\n             <h5>\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"E-mail\"\r\n                variant=\"outlined\"\r\n                onChange={this.handleOnChangeEmail}\r\n                onBlur={this.handleOnBlur}\r\n                helperText={error_email_exists}\r\n                required\r\n            />\r\n            <br/>\r\n            <br/>\r\n            <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                onChange={this.handleOnChangePassword}\r\n              />\r\n             </h5>\r\n           <br/>\r\n           <br/>\r\n           <h6>\r\n\r\n           {/* <Link to=\"/flashcards/#/new\"> */}\r\n           <Button variant=\"contained\"\r\n           onClick ={this.onSubmit} \r\n           disabled={email_taken} \r\n           color=\"secondary\"\r\n           href=\"/flashcards/#/new\"\r\n           >\r\n                Sign-Up\r\n            </Button>\r\n            {/* </Link> */}\r\n            </h6>\r\n               &nbsp; &nbsp;&nbsp;&nbsp;\r\n              </Col>\r\n            </Row>\r\n            {/* <Row className={`justify-content-center`}>\r\n              <Col className={`h-100`} md={6} xs={12} lg={6} xl={6}>\r\n                <StyledFirebaseAuth\r\n                  uiConfig={this.uiConfig}\r\n                  firebaseAuth={firebase.auth()}\r\n                />\r\n              </Col>\r\n            </Row> */}\r\n          </div>\r\n\r\n        </Container>\r\n      );\r\n    } \r\n    else {\r\n      return <></>;\r\n    }\r\n\r\n    \r\n\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport firebase from \"firebase\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { faBrain } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SignUp from \"./SignUp\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\n\r\n// //service to send login credential to express backend\r\n// const LoginService = (data) => (\r\n//   axios\r\n//     .post(`${process.env.REACT_APP_BASEURI}/login`, data)\r\n//     .then((res) => res.status)\r\n// )\r\n\r\n// //Email Vaidation service connect express login/emailcheck route to check user entered email ..to not allow duplicate email entried  \r\n// const EmailValidation = data => (\r\n//   axios.post(`${process.env.REACT_APP_BASEURI}login/emailcheck`, data)\r\n//   .then(exist => exist.status)\r\n// )\r\n\r\n\r\nconst LoginService = (data) => (\r\n  axios\r\n    .post(`http://localhost:5000/login/`, data)\r\n    .then((res) => res.status)\r\n)\r\n\r\n//Email Vaidation service connect express login/emailcheck route to check user entered email ..to not allow duplicate email entried  \r\nconst EmailValidation = data => (\r\n  axios.post(`http://localhost:5000/login/emailcheck`, data)\r\n  .then(exist => exist.status)\r\n)\r\n\r\nclass SignIn extends React.Component {\r\n\r\n  //constructor to save initial empty state\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: false,\r\n      loginSuccess: false,\r\n    };\r\n  }\r\n\r\n  //called when user moves out of email input field \r\n  handleOnChangeEmail = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  //called when user moves out of password input field \r\n  handleOnChangePassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  //checking if entered email doesn't exist is database and require sign up instead of signin\r\n  handleOnBlur = async e => {\r\n    this.setState ({\r\n      email: e.target.value,\r\n    });\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n    const isEmailTaken = await EmailValidation (data);\r\n\r\n    isEmailTaken === 204\r\n      ?  this.setState ({sign_up_reqd: false} )\r\n      : this.setState ({sign_up_reqd: true} );\r\n\r\n      isEmailTaken === 204\r\n      ?  this.setState ({error_sign_up_reqd:\"\"})\r\n      : this.setState ({error_sign_up_reqd:\"User does not exist. Sign-Up First!\"});\r\n  };\r\n\r\n  // sending login information to express route after submit button is pressed \r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    this.setState({wrong_password:true }); \r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    const loginResult = await LoginService(data);\r\n    console.log(`Test ${loginResult}`);\r\n    if (loginResult !== 200) {\r\n      console.log(\"Log in Failed.\");\r\n      this.setState({\r\n        loginSuccess: false,\r\n        error: true,\r\n      });\r\n    } else \r\n    {console.log(\"Log in Success.\");\r\n    this.setState({\r\n      loginSuccess: true,\r\n      error: false,\r\n    });\r\n    }\r\n     this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loginSuccess) {\r\n      return <Redirect to={{ pathname: \"/new\" }} />;\r\n    }\r\n    const {error,sign_up_reqd,error_sign_up_reqd,wrong_password}=this.state; \r\n\r\n      return (\r\n        <Container fluid className=\"login\">\r\n          <div id=\"login\">\r\n            <Row className={`justify-content-center`}>\r\n              <Col>\r\n                <div id=\"welcome\">\r\n                  <h1></h1>\r\n                  <img\r\n                    src={require(\"./Images/flashcardsbg.jpg\")}\r\n                    alt=\"Logo\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className={`h-100`} md={6} xs={12} lg={6} xl={6}>\r\n                <h7>\r\n                  {\" \"}\r\n                  <Button href=\"/flashcards/#/signup\">Sign-Up</Button>\r\n                </h7>\r\n                <h4>LOGIN</h4>\r\n                <br />\r\n                <h5>\r\n                  <TextField\r\n                    id=\"outlined-helperText\"\r\n                    label=\"E-mail\"\r\n                    variant=\"outlined\"\r\n                    onChange={this.handleOnChangeEmail}\r\n                    onBlur={this.handleOnBlur}\r\n                    helperText={error_sign_up_reqd}\r\n                    required\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    id=\"outlined-password-input\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    variant=\"outlined\"\r\n                    onChange={this.handleOnChangePassword}\r\n                    required\r\n                  />\r\n                </h5>\r\n                  \r\n                <h6>\r\n\r\n           {/* <Link to=\"/flashcards/#/new\"> */}\r\n           <Button variant=\"contained\"\r\n           onClick ={this.onSubmit} \r\n           disabled={sign_up_reqd} \r\n           color=\"secondary\"\r\n           href=\"/flashcards/#/new\"\r\n           >\r\n                Log-In\r\n            </Button>\r\n            {/* </Link> */}\r\n            </h6>           \r\n                  <h3>        \r\n                   {wrong_password &&  <Alert severity=\"error\">\r\n                   Unable to log in. Please check your username and password.\r\n                  </Alert> }                \r\n                  </h3>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nexport default class Title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const updateTitle = this.props.updateTitle;\r\n    return (\r\n      <div className=\"title\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={10}>\r\n            <input\r\n              text=\"true\"\r\n              defaultValue={this.props.title}\r\n              ref={this.titleRef}\r\n              minLength=\"4\"\r\n              id=\"titleInput\"\r\n              maxLength=\"50\"\r\n              placeholder={\r\n                this.props.title === null ? \"Give your card set a title.\" : null\r\n              }\r\n            ></input>\r\n\r\n            <button\r\n              onClick={() => {\r\n                updateTitle(this.titleRef.current.value);\r\n              }}\r\n            >\r\n              {this.props.buttonText}\r\n            </button>\r\n            <div className=\"alert\">{this.props.alert}</div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nexport default class Description extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.descRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const updateDesc = this.props.updateDesc;\r\n    return (\r\n      <div className=\"description\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={10}>\r\n            {\" \"}\r\n            <input\r\n              text=\"true\"\r\n              id=\"descInput\"\r\n              ref={this.descRef}\r\n              defaultValue={this.props.descriptionVal}\r\n              minLength=\"4\"\r\n              placeholder={\r\n                this.props.descriptionVal === null ? \"Describe the set.\" : null\r\n              }\r\n            ></input>\r\n            <button\r\n              onClick={() => {\r\n                updateDesc(this.descRef.current.value);\r\n              }}\r\n            >\r\n              Save description\r\n            </button>\r\n            <div className=\"alert\">{this.props.descAlert}</div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row, Card } from \"react-bootstrap\";\r\n\r\nexport default class IndividualCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sideA = React.createRef();\r\n    this.sideB = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const updateSideA = this.props.updateSideA;\r\n    const updateSideB = this.props.updateSideB;\r\n    const deleteCard = this.props.deleteCard;\r\n    const card = this.props.card;\r\n    const category = this.props.category;\r\n    return (\r\n      <div key={card.id} className=\"cardEdit\">\r\n        <Row className=\"justify-content-center deleteHold\">\r\n          <Col md={5} xs={10} lg={5} xl={5}>\r\n            <button\r\n              class=\"deleteCard\"\r\n              onClick={() => {\r\n                deleteCard(card);\r\n              }}\r\n            >\r\n              Delete the card below\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col\r\n            className={`h-100 sideA ${category}`}\r\n            md={6}\r\n            xs={12}\r\n            lg={6}\r\n            xl={6}\r\n          >\r\n            <Card>\r\n              <textarea\r\n                placeholder={\"Type here for side A\"}\r\n                ref={this.sideA}\r\n              ></textarea>\r\n              <button\r\n                onClick={() => {\r\n                  updateSideA(this.sideA.current.value, card);\r\n                }}\r\n              >\r\n                Save Side A\r\n              </button>\r\n            </Card>\r\n          </Col>\r\n          <Col\r\n            className={`h-100 sideB ${category}`}\r\n            md={6}\r\n            xs={12}\r\n            lg={6}\r\n            xl={6}\r\n          >\r\n            <Card>\r\n              <textarea\r\n                placeholder={\"Type here for side B\"}\r\n                ref={this.sideB}\r\n              ></textarea>\r\n              <button\r\n                onClick={() => {\r\n                  updateSideB(this.sideB.current.value, card);\r\n                }}\r\n              >\r\n                Save Side B\r\n              </button>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport Top from \"./Top\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Title from \"./Title\";\r\nimport Description from \"./Description\";\r\nimport IndividualCard from \"./IndividualCard\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default class CardsetEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentCards: [],\r\n      entryId: this.props.match.params.urlString,\r\n      title: \"\",\r\n      descriptionVal: \"\",\r\n      category: \"\",\r\n      set: null,\r\n      isSignedIn: false,\r\n      disabled: true,\r\n      alert: null,\r\n    };\r\n  }\r\n\r\n  updateTitle(n) {\r\n    const name = n;\r\n    const uid = firebase.auth().currentUser.uid;\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"yourCards\")\r\n      .doc(this.state.entryId)\r\n      .update({\r\n        title: name,\r\n      });\r\n  }\r\n\r\n  updateDesc(n) {\r\n    const name = n;\r\n    const uid = firebase.auth().currentUser.uid;\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"yourCards\")\r\n      .doc(this.state.entryId)\r\n      .update({\r\n        description: name,\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) =>\r\n      this.setState({ isSignedIn: !!user }, () => {\r\n        const uid = firebase.auth().currentUser.uid;\r\n\r\n        this.unsubscribe = db\r\n          .collection(\"users\")\r\n          .doc(uid)\r\n          .collection(\"yourCards\")\r\n          .doc(this.state.entryId)\r\n          .collection(\"cards\")\r\n          .orderBy(\"created\", \"asc\")\r\n          .onSnapshot((snapshot) => {\r\n            this.setState({\r\n              currentCards: snapshot.docs,\r\n            });\r\n          });\r\n\r\n        db.collection(\"users\")\r\n          .doc(uid)\r\n          .collection(\"yourCards\")\r\n          .doc(this.state.entryId)\r\n          .get()\r\n          .then((doc) => {\r\n            this.setState({\r\n              title: doc.data().title,\r\n              descriptionVal: doc.data().description,\r\n              category: doc.data().category,\r\n            });\r\n          });\r\n      })\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateSideA(val, card) {\r\n    const uid = firebase.auth().currentUser.uid;\r\n\r\n    let changer = val;\r\n    if (changer !== null) {\r\n      db.collection(\"users\")\r\n        .doc(uid)\r\n        .collection(\"yourCards\")\r\n        .doc(this.state.entryId)\r\n        .collection(\"cards\")\r\n        .doc(card.id)\r\n        .update({\r\n          sideA: val,\r\n        });\r\n    } else if (changer === \"\" || changer === null) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  updateSideB(val, card) {\r\n    const uid = firebase.auth().currentUser.uid;\r\n\r\n    let changer = val;\r\n    if (changer !== null) {\r\n      db.collection(\"users\")\r\n        .doc(uid)\r\n        .collection(\"yourCards\")\r\n        .doc(this.state.entryId)\r\n        .collection(\"cards\")\r\n        .doc(card.id)\r\n        .update({\r\n          sideB: val,\r\n        });\r\n    } else if (changer === \"\" || changer === null) {\r\n      return false;\r\n    }\r\n  }\r\n  deleteCard(card) {\r\n    const uid = firebase.auth().currentUser.uid;\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"yourCards\")\r\n      .doc(this.state.entryId)\r\n      .collection(\"cards\")\r\n      .doc(card.id)\r\n      .delete();\r\n  }\r\n  addCard() {\r\n    const uid = firebase.auth().currentUser.uid;\r\n\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"yourCards\")\r\n      .doc(this.state.entryId)\r\n      .collection(\"cards\")\r\n      .add({\r\n        sideA: null,\r\n        sideB: null,\r\n        answered: 0,\r\n        correct: 0,\r\n        created: new Date(),\r\n      });\r\n  }\r\n  render() {\r\n    const List = this.state.currentCards.map((card, index) => {\r\n      return (\r\n        <IndividualCard\r\n          card={card}\r\n          updateSideA={this.updateSideA.bind(this)}\r\n          updateSideB={this.updateSideB.bind(this)}\r\n          deleteCard={this.deleteCard.bind(this)}\r\n          category={this.state.category}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{this.state.title} - Editing a Card Set | BrainKwik</title>\r\n        </Helmet>\r\n        <Top\r\n          user={true}\r\n          title={\"BrainKwik\"}\r\n          entryId={this.state.entryId}\r\n          addCard={this.addCard.bind(this)}\r\n          action={\"start\"}\r\n        />\r\n        <Container fluid className=\"editing\">\r\n          <div className=\"content\">\r\n            <Title\r\n              updateTitle={this.updateTitle.bind(this)}\r\n              title={this.state.title}\r\n              alert={this.state.alert}\r\n              buttonText={\"Save title\"}\r\n            />\r\n            <Description\r\n              updateDesc={this.updateDesc.bind(this)}\r\n              descriptionVal={this.state.descriptionVal}\r\n              alert={this.state.descAlert}\r\n            />\r\n            <div>\r\n              {this.state.currentCards.length > 0 && List}\r\n              <Row className=\"justify-content-center\">\r\n                <Col md={5} xs={10} lg={5} xl={5}>\r\n                  <button\r\n                    id=\"addCard\"\r\n                    onClick={() => {\r\n                      this.addCard();\r\n                    }}\r\n                  >\r\n                    Add a card\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Card, Col, Row, Container } from \"react-bootstrap\";\r\nimport Top from \"./Top\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default class CardsetAnswer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentCards: [],\r\n      entryId: this.props.match.params.urlString,\r\n      shuffled: [],\r\n      index: 0,\r\n      currentSide: \"A\",\r\n      cardsAnswered: 0,\r\n      category: \"\",\r\n      cardsCorrect: 0,\r\n      title: \"\",\r\n      isSignedIn: false,\r\n      complete: false,\r\n      disabled: true,\r\n      flips: 0,\r\n    };\r\n    this.endButton = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => {\r\n      this.setState({ isSignedIn: !!user }, () => {\r\n        const uid = firebase.auth().currentUser.uid;\r\n        const holder =\r\n          this.props.location.pathname.indexOf(\"/set/yours/\") === -1\r\n            ? db.collection(\"defaultcards\")\r\n            : db.collection(\"users\").doc(uid).collection(\"yourCards\");\r\n\r\n        this.unsubscribe = holder\r\n          .doc(this.state.entryId)\r\n          .collection(\"cards\")\r\n          .orderBy(\"created\", \"asc\")\r\n          .onSnapshot((snapshot) => {\r\n            this.setState({\r\n              currentCards: snapshot.docs,\r\n              category: \"\",\r\n            });\r\n            this.shuffle(this.state.currentCards);\r\n          });\r\n        holder\r\n          .doc(this.state.entryId)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              this.setState({\r\n                category: doc.data().category,\r\n                title: doc.data().title,\r\n              });\r\n            } else {\r\n              this.props.history.push(`/404`);\r\n            }\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe();\r\n    }\r\n  }\r\n\r\n  shuffle(cards) {\r\n    const shuffledCards = cards\r\n      .map((a) => ({ sort: Math.random(), value: a }))\r\n      .sort((a, b) => a.sort - b.sort)\r\n      .map((a) => a.value);\r\n    this.setState({\r\n      shuffled: shuffledCards,\r\n      index: 0,\r\n      currentSide: \"A\",\r\n      complete: false,\r\n      disabled: true,\r\n    });\r\n  }\r\n  flip() {\r\n    const currentSide = this.state.currentSide === \"B\" ? \"A\" : \"B\";\r\n    const flips = this.state.flips + 1;\r\n    this.setState({\r\n      currentSide: currentSide,\r\n      flips: flips,\r\n      disabled: false,\r\n    });\r\n  }\r\n\r\n  endStudy() {\r\n    if (this.state.currentSide === \"C\") {\r\n      this.props.history.push(`/flashcards/home`);\r\n    } else if (this.state.cardsAnswered !== 0) {\r\n      this.setState({\r\n        currentSide: \"C\",\r\n        disabled: true,\r\n      });\r\n    } else {\r\n      this.props.history.push(`/flashcards/home`);\r\n    }\r\n  }\r\n\r\n  nextCard(x) {\r\n    const i = this.state.index + 1;\r\n    const ans = this.state.cardsAnswered + 1;\r\n    const cardsCorrect = this.state.cardsCorrect + x;\r\n\r\n    this.setState(\r\n      {\r\n        index: i,\r\n        cardsAnswered: ans,\r\n        cardsCorrect: cardsCorrect,\r\n        flips: 0,\r\n        disabled: true,\r\n      },\r\n      () => {\r\n        if (i === this.state.currentCards.length) {\r\n          this.setState(\r\n            {\r\n              complete: true,\r\n              currentSide: \"C\",\r\n            },\r\n            this.endStudy()\r\n          );\r\n        } else {\r\n          this.setState({\r\n            currentSide: \"A\",\r\n            complete: false,\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const card = this.state.shuffled[this.state.index];\r\n    const CardSide = () => {\r\n      if (card && this.state.currentSide !== \"C\") {\r\n        return (\r\n          <Row className={`justify-content-center cardHolder`}>\r\n            <Col className={`h-100`} md={10} xs={12} lg={10} xl={10}>\r\n              <Card\r\n                className={`sideA side ${this.state.category}`}\r\n                onClick={() => {\r\n                  this.flip();\r\n                }}\r\n              >\r\n                <span>{card.data().sideA}</span>\r\n              </Card>\r\n            </Col>\r\n            <Col className={`h-100`} md={10} xs={12} lg={10} xl={10}>\r\n              <Card\r\n                className={`sideB side ${this.state.category}`}\r\n                onClick={() => {\r\n                  this.flip();\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <span>{card.data().sideB}</span>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      } else if (this.state.currentSide === \"C\") {\r\n        return (\r\n          <Col\r\n            className={`h-100 sideB ${this.state.category}`}\r\n            md={10}\r\n            xs={12}\r\n            lg={10}\r\n            xl={10}\r\n          >\r\n            <Card className=\"endCard\">\r\n              <span>\r\n                {`During this session, you got ${this.state.cardsCorrect} out of ${this.state.cardsAnswered} cards correct.`}\r\n                <br />\r\n                {`\r\n            That's ${parseFloat(\r\n              (this.state.cardsCorrect / this.state.cardsAnswered) * 100\r\n            ).toFixed(1)}%!`}{\" \"}\r\n              </span>\r\n            </Card>\r\n          </Col>\r\n        );\r\n      } else {\r\n        return <></>;\r\n      }\r\n    };\r\n    const flipped = () => {\r\n      if (this.state.flips > 0 && this.state.flips % 2 === 1) {\r\n        return \"flipped\";\r\n      } else if (this.state.flips > 0 && this.state.flips % 2 === 0) {\r\n        return \"unflipped\";\r\n      } else return \"\";\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{this.state.title} | BrainKwik</title>\r\n        </Helmet>\r\n        <Top title={this.state.title} action=\"cancel\" />\r\n        <Container fluid id=\"answer\">\r\n          <Row className=\"answerButtons justify-content-center topButtons\">\r\n            <Col md={6} xs={12} lg={6} xl={6}>\r\n              <button\r\n                onClick={() => {\r\n                  this.flip();\r\n                }}\r\n              >\r\n                Click to flip card\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          <Row className={`cardAnswer justify-content-center ${flipped()}`}>\r\n            <CardSide />\r\n          </Row>\r\n          <Row className=\"answerButtons justify-content-center result\">\r\n            <Col md={4} xs={6} lg={4} xl={4}>\r\n              <button\r\n                id=\"correct\"\r\n                disabled={this.state.disabled}\r\n                onClick={() => {\r\n                  this.nextCard(1);\r\n                }}\r\n              >\r\n                I got it right\r\n              </button>\r\n            </Col>\r\n            <Col md={4} xs={6} lg={4} xl={4}>\r\n              <button\r\n                id=\"incorrect\"\r\n                disabled={this.state.disabled}\r\n                onClick={() => {\r\n                  this.nextCard(0);\r\n                }}\r\n              >\r\n                I got it incorrect\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"answerButtons  justify-content-center bottom\">\r\n            <Col md={6} xs={12} lg={6} xl={6}>\r\n              <button\r\n                id=\"reshuffle\"\r\n                onClick={() => {\r\n                  this.shuffle(this.state.currentCards);\r\n                }}\r\n              >\r\n                Start Over\r\n              </button>\r\n            </Col>{\" \"}\r\n            <Col md={6} xs={12} lg={6} xl={6}>\r\n              <button\r\n                id=\"end\"\r\n                ref={this.endButton}\r\n                onClick={() => {\r\n                  this.endStudy();\r\n                }}\r\n              >\r\n                End Session\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nexport default class Category extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={10} className=\"selectDiv\">\r\n          <select\r\n            defaultValue={this.props.category}\r\n            onChange={this.props.dropdownChanged}\r\n            disabled={this.props.disabled}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Categorize your set\r\n            </option>\r\n            <option value=\"geography\">Geography</option>\r\n            <option value=\"history\">History</option>\r\n            <option value=\"pop-culture\">Pop Culture</option>\r\n            <option value=\"science\">Science</option>\r\n            <option value=\"sports\">Sports</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport Top from \"./Top\";\r\nimport Category from \"./Category\";\r\nimport Title from \"./Title\";\r\nimport Description from \"./Description\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport axios from \"axios\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default class NewCardSet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.descRef = React.createRef();\r\n    this.state = {\r\n      title: null,\r\n      descriptionVal: null,\r\n      card: null,\r\n      entryId: null,\r\n      alert: null,\r\n      descAlert: null,\r\n      cardSetId: null,\r\n      category: \"\",\r\n    };\r\n  }\r\n\r\n  updateTitle(n) {\r\n    const name = n;\r\n    if (name.length < 4) {\r\n      this.setState({\r\n        alert: \"Title must be at least four characters long\",\r\n      });\r\n    } else {\r\n      const entryId = name\r\n        .replace(/\\W+/g, \" \")\r\n        .replace(/\\s+/g, \"-\")\r\n        .toLowerCase();\r\n      this.setState({\r\n        title: name,\r\n        alert: null,\r\n        entryId: entryId,\r\n      });\r\n    }\r\n  }\r\n\r\n  updateDesc(n) {\r\n    const name = n;\r\n    if (name.length < 5) {\r\n      this.setState({\r\n        descAlert: \"Please write a longer description\",\r\n      });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          descriptionVal: name,\r\n          descAlert: null,\r\n        },\r\n        () => {\r\n          setTimeout(this.createSet(), 1000);\r\n        }\r\n      );\r\n\r\n      let entryString = this.state.entryId;\r\n      let iterate = 0;\r\n\r\n      //    this.checkExists(entryString, iterate);\r\n    }\r\n  }\r\n\r\n  checkExists(entryString, i) {\r\n    db.collection(\"defaultcards\")\r\n      .doc(entryString)\r\n      .get()\r\n      .then((doc) => {\r\n        if (!doc.exists) {\r\n          this.setState({\r\n            entryId: entryString,\r\n          });\r\n          setTimeout(this.createSet(), 1000);\r\n        } else {\r\n          i++;\r\n\r\n          const string = this.state.entryId + \"-\" + i;\r\n          this.checkExists(string, i);\r\n        }\r\n      });\r\n  }\r\n\r\n  dropdownChanged = (e) => {\r\n    this.setState({\r\n      category: e.target.value,\r\n    });\r\n  };\r\n\r\n  createSet() {\r\n    const body = {\r\n      title: this.state.title,\r\n      description: this.state.descriptionVal,\r\n      category: this.state.category,\r\n      entryId: this.state.entryId,\r\n      userId: \"5f4bdd9f4ae4db08d4b77c04\", // Change this\r\n    };\r\n\r\n    // Need help with this part\r\n    const token =\r\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlcyI6WyJ1c2VyIl0sIl9pZCI6IjVmNGJkZDlmNGFlNGRiMDhkNGI3N2MwNCIsImlhdCI6MTU5ODgxMDkwNiwiZXhwIjoxNTk4ODE4MTA2fQ.5zeCDhhnRiJ7 - 0qlipxRNhhZAOeQPiAepoelLO7lMYc\";\r\n    const headers = {\r\n      Authorization: \"Bearer \" + token, //the token is a variable which holds the token\r\n    };\r\n\r\n    //\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/set\", body)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        console.log(body);\r\n        const cardSetId = response.data._id;\r\n        this.setState({\r\n          cardSetId: cardSetId,\r\n        });\r\n        const emptyCard = {\r\n          sideA: \"This is side A\",\r\n          sideB: \"This is side B\",\r\n          setId: cardSetId,\r\n        };\r\n        axios.post(\"http://localhost:5000/cards/\" + cardSetId, emptyCard);\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          // Request made and server responded\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          console.log(\"Error\", error.message);\r\n        }\r\n      });\r\n\r\n    //   db.collection(\"users\")\r\n    //    .doc(uid)\r\n    //    .collection(\"yourCards\")\r\n    //    .doc(this.state.entryId)\r\n    //    .collection(\"cards\")\r\n    //    .add({\r\n    //      sideA: null,\r\n    //      sideB: null,\r\n    //      answered: 0,\r\n    //      correct: 0,\r\n    //      created: new Date(),\r\n    //    });\r\n\r\n    this.props.history.push({\r\n      pathname: `/set/yours/${this.state.cardSetId}/edit`,\r\n      state: {\r\n        title: this.state.title,\r\n        description: this.state.descriptionVal,\r\n        category: this.state.category,\r\n        entryId: this.state.entryId,\r\n        cardSetId: this.setState.cardSetId,\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Create a card set BrainKwik</title>\r\n        </Helmet>\r\n        <Top title={\"BrainKwik\"} action={\"cancel\"} />\r\n        <Container fluid className={this.state.category}>\r\n          <div className=\"content\">\r\n            <h1>Here's your chance to create a new study set.</h1>\r\n            <Category\r\n              dropdownChanged={this.dropdownChanged}\r\n              category={this.state.category}\r\n              disabled={false}\r\n            />\r\n            {this.state.category !== \"\" && (\r\n              <Title\r\n                updateTitle={this.updateTitle.bind(this)}\r\n                title={this.state.title}\r\n                alert={this.state.alert}\r\n                buttonText={\"Save title\"}\r\n              />\r\n            )}\r\n            {this.state.title !== null && (\r\n              <Description\r\n                updateDesc={this.updateDesc.bind(this)}\r\n                title={this.state.descriptionVal}\r\n                alert={this.state.descAlert}\r\n              />\r\n            )}\r\n          </div>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport Top from \"./Top\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default class CardsetAnswer extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>404 | BrainKwik</title>\r\n        </Helmet>\r\n        <Top title={`BrainKwik`} action=\"cancel\" />\r\n        <Container fluid className=\"fourohfour\">\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={6} xs={12} lg={6} xl={6}>\r\n              You have a 404 error.\r\n              <br />\r\n              <br />\r\n              <Link to={`/home`}>Go to our homepage</Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport SignIn from \"./SignIn\";\r\nimport SignUp from \"./SignUp\";\r\nimport CardsetEdit from \"./CardsetEdit\";\r\nimport CardsetAnswer from \"./CardsetAnswer\";\r\nimport NewCardSet from \"./NewCardSet\";\r\nimport NoMatch from \"./NoMatch\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import {Link, IndexRedirect} from \"react-router\";\r\n\r\n\r\n// import {Link, IndexRedirect} from \"react-router\";\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/\" component={SignIn} />\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/set/yours/:urlString/edit\" component={CardsetEdit} />\r\n            <Route path=\"/set/yours/:urlString/\" component={CardsetAnswer} />\r\n            <Route path=\"/set/:urlString/\" componyent={CardsetAnswer} />\r\n            <Route path=\"/new\" component={NewCardSet} />\r\n            {/* <Redirect from=\"/\" to=\"/flashcards/#\" /> */}\r\n            <Route path=\"*\" component={App}>\r\n                    <Redirect to=\"/\" />\r\n                </Route>\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </Router>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./setupFirebase\";\r\nimport \"./index.css\";\r\nimport \"./style.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/flashcardsbg.4227b164.jpg\";"],"sourceRoot":""}