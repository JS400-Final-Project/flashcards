{"version":3,"sources":["Images/line_w.png","setupFirebase.js","Top.js","SetList.js","Home.js","SignUp.js","SignIn.js","Title.js","Description.js","IndividualCard.js","CardsetEdit.js","CardsetAnswer.js","Category.js","NewCardSet.js","NoMatch.js","App.js","serviceWorker.js","index.js","Images/flashcardsbg.jpg"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","Top","props","state","cardSetsDefault","isSignedIn","Action","action","to","user","entryId","id","src","require","alt","width","height","className","icon","faUserCog","size","color","React","Component","SetList","cards","this","editable","Tiles","length","map","set","index","Col","data","category","md","xs","lg","key","xl","Card","Body","replace","title","description","db","firestore","Home","yourCards","unregisterAuthObserver","auth","onAuthStateChanged","default","collection","onSnapshot","snapshot","setState","docs","uid","currentUser","doc","console","log","Helmet","charSet","Container","fluid","Row","UserRegistration","axios","post","process","then","res","status","EmailValidation","exist","SignUp","handleOnChangeEmail","e","email","target","value","handleOnChangePassword","password","handleOnBlur","a","isEmailTaken","email_taken","error_email_exists","onSubmit","preventDefault","register","error","pathname","Button","href","TextField","label","variant","onChange","onBlur","helperText","required","type","autoComplete","onClick","disabled","LoginService","SignIn","sign_up_reqd","error_sign_up_reqd","wrong_password","loginResult","loginSuccess","JSON","stringify","localStorage","setItem","forceUpdate","Alert","severity","Title","titleRef","createRef","updateTitle","text","defaultValue","ref","minLength","maxLength","placeholder","current","buttonText","alert","Description","descRef","updateDesc","descriptionVal","descAlert","IndividualCard","sideA","sideB","updateSideA","updateSideB","deleteCard","card","_id","class","CardsetEdit","currentCards","match","params","urlString","isPublic","headers","n","body","put","response","token","parse","getItem","Authorization","getCards","get","resdata","val","changer","url","delete","setId","history","push","pub","List","bind","addCard","deleteSet","makePublic","CardsetAnswer","shuffled","currentSide","cardsAnswered","cardsCorrect","complete","flips","endButton","catch","err","shuffle","shuffledCards","sort","Math","random","b","x","i","ans","endStudy","CardSide","flip","parseFloat","toFixed","nextCard","Category","dropdownChanged","NewCardSet","cardSetId","name","toLowerCase","setTimeout","createSet","userData","userWithoutPassword","roles","App","exact","path","component","componyent","NoMatch","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yIAAAA,EAAOC,QAAU,IAA0B,oC,qGCI3CC,IAASC,cAAc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,mB,gFCAMC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,gBAAiB,GACjBC,YAAY,GAJG,E,qDAQT,IAAD,OACDC,EAAS,WACb,MAA0B,WAAtB,EAAKJ,MAAMK,OACN,kBAAC,IAAD,CAAMC,GAAE,QAAR,kBAEiB,WAAtB,EAAKN,MAAMK,OACN,kBAAC,IAAD,CAAMC,GAAE,SAAR,eAEe,IAApB,EAAKN,MAAMO,MAAuC,UAAtB,EAAKP,MAAMK,OAEvC,kBAAC,IAAD,CAAMC,GAAE,qBAAgB,EAAKN,MAAMQ,QAA3B,MAAR,yBAFJ,GAOF,OACE,yBAAKC,GAAG,OACN,6BACE,kBAAC,IAAD,CAAMH,GAAE,oBAEN,yBAAKI,IAAKC,EAAQ,KAAwBC,IAAI,OAAQC,MAAM,MAAMC,OAAO,UAK7E,yBAAKC,UAAU,QACb,kBAAC,IAAD,CAAMT,GAAE,oBACT,kBAAC,IAAD,CAAiBU,KAAMC,IAAWC,KAAK,KAAKC,MAAM,cAInD,yBAAKJ,UAAU,UACb,kBAACX,EAAD,Y,GAzCuBgB,IAAMC,W,kBCHlBC,E,uKACT,IAAD,OACDC,EAAQC,KAAKxB,MAAMuB,MACnBE,EAAWD,KAAKxB,MAAMyB,SACtBC,EAAQ,WACZ,OAAIH,EAAMI,OAAS,EACVJ,EAAMK,KAAI,SAACC,EAAKC,GAAN,OACf,kBAACC,EAAA,EAAD,CACEhB,UAAS,gBAAWc,EAAIG,OAAOC,UAC/BC,GAAI,EACJC,GAAI,GACJC,GAAI,EACJC,IAAKP,EACLQ,GAAI,GAEJ,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,4BAAKX,EAAIG,OAAOC,SAASQ,QAAQ,IAAK,MACtC,4BAAKZ,EAAIG,OAAOU,OAChB,2BAAIb,EAAIG,OAAOW,aACf,uBAAG5B,UAAU,UACV,EAAKf,MAAMyB,SACR,iBACA,wBAEN,yBAAKV,UAAU,WACb,kBAAC,IAAD,CACET,IACe,IAAbmB,EAAA,eACYI,EAAIpB,IADhB,qBAEkBoB,EAAIpB,KAGxB,yBAAKM,UAAU,UAAf,mBAEuB,IAAxB,EAAKf,MAAMyB,SACV,kBAAC,IAAD,CAAMnB,GAAE,qBAAgBuB,EAAIpB,GAApB,UACN,yBAAKM,UAAU,UAAf,kBAGF,4CAQL,sCAIX,OAAO,kBAACW,EAAD,U,GApD0BN,IAAMC,W,0BCKrCuB,EAAKlD,IAASmD,YAECC,E,kDACnB,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,gBAAiB,GACjBC,YAAY,EACZ4C,UAAW,IALI,E,gEAQE,IAAD,OAClBvB,KAAKwB,uBAAyBtD,IAASuD,OAAOC,oBAAmB,SAAC3C,GAChE,EAAK4C,QAAUP,EAAGQ,WAAW,gBAAgBC,YAAW,SAACC,GACvD,EAAKC,SAAS,CACZrD,gBAAiBoD,EAASE,UAI9B,EAAKD,SAAS,CAAEpD,aAAcI,IAAQ,WACpC,IAAMkD,EAAM/D,IAASuD,OAAOS,YAAYD,IACxC,EAAKV,UAAYH,EACdQ,WAAW,SACXO,IAAIF,GACJL,WAAW,aACXC,YAAW,SAACC,GACXM,QAAQC,IAAI,GACZ,EAAKN,SAAS,CACZR,UAAWO,EAASE,kB,6CAO1BhC,KAAK2B,SACP3B,KAAK2B,UAEH3B,KAAKuB,WACPvB,KAAKuB,c,+BAIP,IAAM7C,EAAkBsB,KAAKvB,MAAMC,gBAC7B6C,EAAYvB,KAAKvB,MAAM8C,UAErB5C,EAAeqB,KAAKvB,MAApBE,WACR,OACE,oCACE,kBAAC2D,EAAA,EAAD,KACE,0BAAMC,QAAQ,UACd,8CAEF,kBAAC,EAAD,CAAKrB,MAAO,aAAcrC,OAAQ,WAClC,kBAAC2D,EAAA,EAAD,CAAWC,OAAK,GACd,yBAAKlD,UAAU,WACb,6DACA,kBAACmD,EAAA,EAAD,KACG/D,GACC,kBAAC4B,EAAA,EAAD,CAAKhB,UAAU,YAAYmB,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GACpD,kBAAC,IAAD,CAAMhC,GAAE,QACN,kBAACiC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,oDACA,wDACA,yBAAKzB,UAAU,UAAf,SAMTZ,GACC,kBAAC,EAAD,CAASoB,MAAOrB,EAAiBuB,UAAU,IAE5CtB,GAAc,kBAAC,EAAD,CAASoB,MAAOwB,EAAWtB,UAAU,Y,GAxEhCL,IAAMC,W,oECQlC8C,EAAmB,SAAAnC,GACvB,OAAOoC,IAAMC,KAAN,UAAcC,wBAAd,iBAA4DtC,GAC9DuC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAUVC,EAAkB,SAAA1C,GAAI,OACjCoC,IAAMC,KAAN,UAAcC,wBAAd,qBAAgEtC,GAC/DuC,MAAK,SAAAI,GAAK,OAAIA,EAAMF,WAyLRG,E,kDAlLb,WAAa5E,GACZ,IAAD,8BACE,cAAOA,IAWT6E,oBAAsB,SAAAC,GAEpB,EAAKvB,SACJ,CACCwB,MAAOD,EAAEE,OAAOC,SAhBpB,EAoBAC,uBAAyB,SAAAJ,GAEvB,EAAKvB,SACJ,CACC4B,SAAUL,EAAEE,OAAOC,SAxBvB,EA4BAG,aA5BA,uCA4Be,WAAMN,GAAN,iBAAAO,EAAA,6DACb,EAAK9B,SAAU,CACbwB,MAAOD,EAAEE,OAAOC,QAEZjD,EAAO,CACX+C,MAAO,EAAK9E,MAAM8E,OALP,SAOcL,EAAiB1C,GAP/B,OASI,OAFXsD,EAPO,QAUR,EAAK/B,SAAU,CAACgC,aAAa,IAC9B,EAAKhC,SAAU,CAACgC,aAAa,IAEd,MAAjBD,EACG,EAAK/B,SAAU,CAACiC,mBAAmB,6CACpC,EAAKjC,SAAU,CAACiC,mBAAmB,KAf1B,2CA5Bf,wDA+CAC,SA/CA,uCA+CW,WAAMX,GAAN,eAAAO,EAAA,6DAETP,EAAEY,iBACI1D,EACN,CACE+C,MAAO,EAAK9E,MAAM8E,MAClBI,SAAU,EAAKlF,MAAMkF,UANd,SASoBhB,EAAkBnC,GATtC,OAUe,MAVf,OAYP,EAAKuB,SACJ,CACCwB,MAAO,GACPI,SAAU,GACVQ,UAAU,EACVC,OAAO,IAIT,EAAKrC,SACJ,CACCqC,OAAO,EACPD,UAAU,IAxBL,2CA/CX,sDAEE,EAAK1F,MACL,CACE8E,MAAO,GACPI,SAAU,GACVQ,UAAS,EACTC,OAAM,GAPV,E,qDAyFU,IAAD,EACkDpE,KAAKvB,MAAtCsF,GADjB,EACAI,SADA,EACUC,MADV,EACiBL,aAAaC,EAD9B,EAC8BA,mBACrC,OAAIhE,KAAKvB,MAAM0F,SACN,kBAAC,IAAD,CAAUrF,GAAM,CAAEuF,SAAU,UAEhCrE,KAAKxB,MAAMG,WA2EP,qCAzEL,kBAAC6D,EAAA,EAAD,CAAWC,OAAK,EAAClD,UAAU,SACzB,yBAAKN,GAAG,YAER,yBAAKA,GAAG,UACN,kBAACyD,EAAA,EAAD,CAAKnD,UAAS,0BACZ,kBAACgB,EAAA,EAAD,KACA,yBAAKtB,GAAG,WACR,6BACE,yBAAKC,IAAKC,EAAQ,IAA8BC,IAAI,OAAQC,MAAM,OAAOC,OAAO,WAGlF,kBAACiB,EAAA,EAAD,CAAKhB,UAAS,QAAWmB,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GACjD,gCAAK,kBAACwD,EAAA,EAAD,CAASC,KAAK,iBAAd,UAEL,uCAKF,6BACD,4BACD,kBAACC,EAAA,EAAD,CACIvF,GAAG,sBACHwF,MAAM,SACNC,QAAQ,WACRC,SAAU3E,KAAKqD,oBACfuB,OAAQ5E,KAAK4D,aACbiB,WAAYb,EACZc,UAAQ,IAEZ,6BACA,6BACA,kBAACN,EAAA,EAAD,CACIvF,GAAG,0BACHwF,MAAM,WACNM,KAAK,WACLC,aAAa,mBACbN,QAAQ,WACRC,SAAU3E,KAAK0D,0BAGpB,6BACA,6BACA,4BAGA,kBAACY,EAAA,EAAD,CAAQI,QAAQ,YAChBO,QAAUjF,KAAKiE,SACfiB,SAAUnB,EACVpE,MAAM,YACN4E,KAAK,qBAJL,YAnCG,4B,GAhHO3E,IAAMC,W,SCfrBsF,EAAe,SAAC3E,GAAD,OACnBoC,IAAMC,KAAN,UAAcC,wBAAd,UAAqDtC,GAAMuC,MAAK,SAACC,GAAD,OAASA,MAGrEE,EAAkB,SAAC1C,GAAD,OACtBoC,IACGC,KADH,UACWC,wBADX,oBAC4DtC,GACzDuC,MAAK,SAACI,GAAD,OAAWA,EAAMF,WAgKZmC,E,kDA5Jb,WAAY5G,GAAQ,IAAD,8BACjB,cAAMA,IAUR6E,oBAAsB,SAACC,GACrB,EAAKvB,SAAS,CACZwB,MAAOD,EAAEE,OAAOC,SAbD,EAkBnBC,uBAAyB,SAACJ,GACxB,EAAKvB,SAAS,CACZ4B,SAAUL,EAAEE,OAAOC,SApBJ,EAyBnBG,aAzBmB,uCAyBJ,WAAON,GAAP,iBAAAO,EAAA,6DACb,EAAK9B,SAAS,CACZwB,MAAOD,EAAEE,OAAOC,QAEZjD,EAAO,CACX+C,MAAO,EAAK9E,MAAM8E,OALP,SAOcL,EAAgB1C,GAP9B,OASI,OAFXsD,EAPO,QAUT,EAAK/B,SAAS,CAAEsD,cAAc,IAC9B,EAAKtD,SAAS,CAAEsD,cAAc,IAEjB,MAAjBvB,EACI,EAAK/B,SAAS,CAAEuD,mBAAoB,KACpC,EAAKvD,SAAS,CACZuD,mBAAoB,wCAhBb,2CAzBI,wDA8CnBrB,SA9CmB,uCA8CR,WAAOX,GAAP,iBAAAO,EAAA,6DACTP,EAAEY,iBAEF,EAAKnC,SAAS,CAAEwD,gBAAgB,IAC1B/E,EAAO,CACX+C,MAAO,EAAK9E,MAAM8E,MAClBI,SAAU,EAAKlF,MAAMkF,UANd,SAQiBwB,EAAa3E,GAR9B,OAQHgF,EARG,OASTpD,QAAQC,IAAR,eAAoBmD,EAAYvC,SACL,MAAvBuC,EAAYvC,QACdb,QAAQC,IAAI,kBACZ,EAAKN,SAAS,CACZ0D,cAAc,EACdrB,OAAO,MAGThC,QAAQC,IAAI,mBACZD,QAAQC,IAAIqD,KAAKC,UAAUH,EAAYhF,OACvCoF,aAAaC,QAAQ,WAAYH,KAAKC,UAAUH,EAAYhF,OAC5D,EAAKuB,SAAS,CACZ0D,cAAc,EACdrB,OAAO,KAGX,EAAK0B,cAzBI,2CA9CQ,sDAEjB,EAAKrH,MAAQ,CACX8E,MAAO,GACPI,SAAU,GACVS,OAAO,EACPqB,cAAc,GANC,E,qDA2EjB,GAAIzF,KAAKvB,MAAMgH,aACb,OAAO,kBAAC,IAAD,CAAU3G,GAAI,CAAEuF,SAAU,UAF5B,MASHrE,KAAKvB,MAHP4G,GANK,EAKLjB,MALK,EAMLiB,cACAC,EAPK,EAOLA,mBACAC,EARK,EAQLA,eAEF,OACE,kBAAC/C,EAAA,EAAD,CAAWC,OAAK,EAAClD,UAAU,SACzB,yBAAKN,GAAG,SACN,kBAACyD,EAAA,EAAD,CAAKnD,UAAS,0BACZ,kBAACgB,EAAA,EAAD,KACE,yBAAKtB,GAAG,WACN,6BACA,yBACEC,IAAKC,EAAQ,IACbC,IAAI,OACJC,MAAM,OACNC,OAAO,WAIb,kBAACiB,EAAA,EAAD,CAAKhB,UAAS,QAAWmB,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GACjD,4BACG,IACD,kBAACwD,EAAA,EAAD,CAAQC,KAAK,wBAAb,YAEF,qCACA,6BACA,4BACE,kBAACC,EAAA,EAAD,CACEvF,GAAG,sBACHwF,MAAM,SACNC,QAAQ,WACRC,SAAU3E,KAAKqD,oBACfuB,OAAQ5E,KAAK4D,aACbiB,WAAYS,EACZR,UAAQ,IAEV,6BACA,6BACA,kBAACN,EAAA,EAAD,CACEvF,GAAG,0BACHwF,MAAM,WACNM,KAAK,WACLC,aAAa,mBACbN,QAAQ,WACRC,SAAU3E,KAAK0D,uBACfoB,UAAQ,KAGZ,4BAEE,kBAACR,EAAA,EAAD,CACEI,QAAQ,YACRO,QAASjF,KAAKiE,SACdiB,SAAUG,EACV1F,MAAM,YACN4E,KAAK,qBALP,WAWF,4BACGgB,GACC,kBAACQ,EAAA,EAAD,CAAOC,SAAS,SAAhB,uE,GAjJGpG,IAAMC,WC3BNoG,E,kDACnB,WAAYzH,GAAQ,IAAD,8BACjB,cAAMA,IACD0H,SAAWtG,IAAMuG,YAFL,E,qDAKT,IAAD,OACDC,EAAcpG,KAAKxB,MAAM4H,YAC/B,OACE,yBAAK7G,UAAU,SACb,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,0BACb,kBAACgB,EAAA,EAAD,CAAKI,GAAI,IACP,2BACE0F,KAAK,OACLC,aAActG,KAAKxB,MAAM0C,MACzBqF,IAAKvG,KAAKkG,SACVM,UAAU,IACVvH,GAAG,aACHwH,UAAU,KACVC,YACuB,OAArB1G,KAAKxB,MAAM0C,MAAiB,8BAAgC,OAIhE,4BACE+D,QAAS,WACPmB,EAAY,EAAKF,SAASS,QAAQlD,SAGnCzD,KAAKxB,MAAMoI,YAEd,yBAAKrH,UAAU,SAASS,KAAKxB,MAAMqI,c,GA/BZjH,IAAMC,WCApBiH,E,kDACnB,WAAYtI,GAAQ,IAAD,8BACjB,cAAMA,IACDuI,QAAUnH,IAAMuG,YAFJ,E,qDAKT,IAAD,OACDa,EAAahH,KAAKxB,MAAMwI,WAC9B,OACE,yBAAKzH,UAAU,eACb,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,0BACb,kBAACgB,EAAA,EAAD,CAAKI,GAAI,IACN,IACD,2BACE0F,KAAK,OACLpH,GAAG,YACHsH,IAAKvG,KAAK+G,QACVT,aAActG,KAAKxB,MAAMyI,eACzBT,UAAU,IACVE,YACgC,OAA9B1G,KAAKxB,MAAMyI,eAA0B,oBAAsB,OAG/D,4BACEhC,QAAS,WACP+B,EAAW,EAAKD,QAAQJ,QAAQlD,SAFpC,oBAOA,yBAAKlE,UAAU,SAASS,KAAKxB,MAAM0I,kB,GA9BNtH,IAAMC,WCA1BsH,E,kDACnB,WAAY3I,GAAQ,IAAD,8BACjB,cAAMA,IACD4I,MAAQxH,IAAMuG,YACnB,EAAKkB,MAAQzH,IAAMuG,YAHF,E,qDAMT,IAAD,OACDmB,EAActH,KAAKxB,MAAM8I,YACzBC,EAAcvH,KAAKxB,MAAM+I,YACzBC,EAAaxH,KAAKxB,MAAMgJ,WACxBC,EAAOzH,KAAKxB,MAAMiJ,KAClBhH,EAAWT,KAAKxB,MAAMiC,SAC5B,OACE,yBAAKI,IAAK4G,EAAKC,IAAKnI,UAAU,YAC5B,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,qCACb,kBAACgB,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GAC7B,4BACE6G,MAAM,aACN1C,QAAS,WACPuC,EAAWC,KAHf,2BAUJ,kBAAC/E,EAAA,EAAD,KACE,kBAACnC,EAAA,EAAD,CACEhB,UAAS,sBAAiBkB,GAC1BC,GAAI,EACJC,GAAI,GACJC,GAAI,EACJE,GAAI,GAEJ,kBAACC,EAAA,EAAD,KACE,8BAAU2F,YAAa,uBAAwBH,IAAKvG,KAAKoH,OACtDK,EAAKL,OAER,4BACEnC,QAAS,WACPqC,EAAY,EAAKF,MAAMT,QAAQlD,MAAOgE,KAF1C,iBASJ,kBAAClH,EAAA,EAAD,CACEhB,UAAS,sBAAiBkB,GAC1BC,GAAI,EACJC,GAAI,GACJC,GAAI,EACJE,GAAI,GAEJ,kBAACC,EAAA,EAAD,KACE,8BAAU2F,YAAa,uBAAwBH,IAAKvG,KAAKqH,OACtDI,EAAKJ,OAER,4BACEpC,QAAS,WACPsC,EAAY,EAAKF,MAAMV,QAAQlD,MAAOgE,KAF1C,uB,GA3D8B7H,IAAMC,WCK7B+H,E,kDACnB,WAAYpJ,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXoJ,aAAc,GACd7I,QAAS,EAAKR,MAAMsJ,MAAMC,OAAOC,UACjC9G,MAAO,GACP+F,eAAgB,GAChBxG,SAAU,GACVJ,IAAK,KACL1B,YAAY,EACZuG,UAAU,EACV2B,MAAO,KACPoB,SAAU,KACVC,QAAS,IAbM,E,wDAgBPC,GACV/F,QAAQC,IAAI8F,GACZ,IACMC,EAAO,CACXlH,MAFWiH,EAGXhH,YAAanB,KAAKvB,MAAMwI,eACxBxG,SAAUT,KAAKvB,MAAMgC,UAEvBmC,IACGyF,IACC,UAAGvF,wBAAH,SAA0C9C,KAAKvB,MAAMO,QACrDoJ,EACApI,KAAKvB,MAAMyJ,SAEZnF,MAAK,SAACuF,GACLlG,QAAQC,IAAIiG,EAAS9H,W,iCAIhB2H,GACT,IACMC,EAAO,CACXjH,YAFWgH,EAGXjH,MAAOlB,KAAKvB,MAAMyC,MAClBT,SAAUT,KAAKvB,MAAMgC,UAEvBmC,IAAMyF,IACJ,UAAGvF,wBAAH,SAA0C9C,KAAKvB,MAAMO,QACrDoJ,EACApI,KAAKvB,MAAMyJ,W,0CAIM,IAAD,OACZK,EAAQ7C,KAAK8C,MAAM5C,aAAa6C,QAAQ,aAAaF,MAC3DvI,KAAK+B,SACH,CACEmG,QAAS,CACPA,QAAS,CACPQ,cAAe,UAAYH,MAIjC,WACEnG,QAAQC,IAAI,EAAK5D,MAAMyJ,SACvB,EAAKS,WACL/F,IACGgG,IACC,UAAG9F,wBAAH,SAA0C,EAAKrE,MAAMO,QACrD,EAAKP,MAAMyJ,SAEZnF,MAAK,SAACuF,GACL,IAAMO,EAAUP,EAAS9H,KACzB,EAAKuB,SAAS,CACZb,MAAO2H,EAAQ3H,MACf+F,eAAgB4B,EAAQ1H,YACxBV,SAAUoI,EAAQpI,SAClBwH,SAAUY,EAAQZ,mB,kCAOlBa,EAAKrB,GAAO,IAAD,OACjBsB,EAAUD,EACd,GAAgB,OAAZC,EAAkB,CACpB,IAAMX,EAAO,CAAEhB,MAAO2B,EAAS1B,MAAOI,EAAKJ,OAC3CzE,IACGyF,IACC,UAAGvF,wBAAH,WACE9C,KAAKvB,MAAMO,QACX,IACAyI,EAAKC,IACPU,EACApI,KAAKvB,MAAMyJ,SAEZnF,MAAK,SAACuF,GACL,EAAKK,mBAEJ,GAAgB,KAAZI,GAA8B,OAAZA,EAC3B,OAAO,I,kCAICD,EAAKrB,GAAO,IAAD,OACjBsB,EAAUD,EACd,GAAgB,OAAZC,EAAkB,CACpB,IAAMX,EAAO,CAAEf,MAAO0B,EAAS3B,MAAOK,EAAKL,OAC3CxE,IACGyF,IACC,UAAGvF,wBAAH,WACE9C,KAAKvB,MAAMO,QACX,IACAyI,EAAKC,IACPU,EACApI,KAAKvB,MAAMyJ,SAEZnF,MAAK,SAACuF,GACL,EAAKK,mBAEJ,GAAgB,KAAZI,GAA8B,OAAZA,EAC3B,OAAO,I,iCAGAtB,GAAO,IAAD,OACTuB,EACJ,UAAGlG,wBAAH,kBACA9C,KAAKvB,MAAMO,QACX,IACAyI,EAAKC,IACP9E,IAAMqG,OAAOD,EAAKhJ,KAAKvB,MAAMyJ,SAASnF,MAAK,SAACuF,GAC1C,EAAKK,gB,gCAGE,IAAD,OACFP,EAAO,CAAEhB,MAAO,KAAMC,MAAO,KAAM6B,MAAOlJ,KAAKvB,MAAMO,SACrDgK,EAAM,UAAGlG,wBAAH,WAA4C9C,KAAKvB,MAAMO,QACnE4D,IAAMC,KAAKmG,EAAKZ,EAAMpI,KAAKvB,MAAMyJ,SAASnF,MAAK,SAACuF,GAC9C,EAAKK,gB,kCAII,IAAD,OACJK,EAAM,UAAGlG,wBAAH,SAA0C9C,KAAKvB,MAAMO,QACjE4D,IAAMqG,OAAOD,EAAKhJ,KAAKvB,MAAMyJ,SAASnF,MAAK,SAACuF,GAC1C,EAAK9J,MAAM2K,QAAQC,KAAK,CACtB/E,SAAS,e,mCAID,IAAD,OACLgF,GAA8B,IAAxBrJ,KAAKvB,MAAMwJ,SACvBjI,KAAK+B,SAAS,CAAEkG,SAAUoB,IAAO,WAC/B,IAAML,EAAG,UAAMlG,wBAAN,uBAAkD,EAAKrE,MAAMO,QAA7D,KACT4D,IAAMyF,IAAIW,EAAK,CAAEf,SAAUoB,GAAO,EAAK5K,MAAMyJ,SAASnF,MAAK,SAACuF,GAC1DlG,QAAQC,IAAIiG,W,iCAIN,IAAD,OACT1F,IACGgG,IACC,UAAG9F,wBAAH,WAA4C9C,KAAKvB,MAAMO,QACvDgB,KAAKvB,MAAMyJ,SAEZnF,MAAK,SAACuF,GACL,IAAMT,EAAeS,EAAS9H,KAC9B,EAAKuB,SAAS,CAAE8F,oBAEjB9E,MAAK,WACJX,QAAQC,IAAI,EAAK5D,MAAMoJ,mB,+BAGnB,IAAD,OACDyB,EAAOtJ,KAAKvB,MAAMoJ,aAAazH,KAAI,SAACqH,EAAMnH,GAC9C,OACE,kBAAC,EAAD,CACEmH,KAAMA,EACNH,YAAa,EAAKA,YAAYiC,KAAK,GACnChC,YAAa,EAAKA,YAAYgC,KAAK,GACnC/B,WAAY,EAAKA,WAAW+B,KAAK,GACjC9I,SAAU,EAAKhC,MAAMgC,cAK3B,OACE,oCACE,kBAAC6B,EAAA,EAAD,KACE,0BAAMC,QAAQ,UACd,+BAAQvC,KAAKvB,MAAMyC,MAAnB,sCAEF,kBAAC,EAAD,CACEnC,MAAM,EACNmC,MAAO,YACPlC,QAASgB,KAAKvB,MAAMO,QACpBwK,QAASxJ,KAAKwJ,QAAQD,KAAKvJ,MAC3BnB,OAAQ,UAEV,kBAAC2D,EAAA,EAAD,CAAWC,OAAK,EAAClD,UAAU,WACzB,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACE6G,YAAapG,KAAKoG,YAAYmD,KAAKvJ,MACnCkB,MAAOlB,KAAKvB,MAAMyC,MAClB2F,MAAO7G,KAAKvB,MAAMoI,MAClBD,WAAY,eAEd,kBAAC,EAAD,CACEI,WAAYhH,KAAKgH,WAAWuC,KAAKvJ,MACjCiH,eAAgBjH,KAAKvB,MAAMwI,eAC3BJ,MAAO7G,KAAKvB,MAAMyI,YAEpB,6BACGlH,KAAKvB,MAAMoJ,aAAa1H,OAAS,GAAKmJ,EACvC,kBAAC5G,EAAA,EAAD,CAAKnD,UAAU,0BACb,kBAACgB,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GAC7B,4BACE7B,GAAG,UACHM,UAAU,aACV0F,QAAS,WACP,EAAKuE,YAJT,eAUF,kBAACjJ,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GAC7B,4BACE7B,GAAG,YACHM,UAAU,aACV0F,QAAS,WACP,EAAKwE,cAJT,cAQU,KAGZ,kBAAClJ,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GAC7B,4BACEvB,UAAU,aACVN,GAAG,UACHgG,QAAS,WACP,EAAKyE,gBAGkB,IAAxB1J,KAAKvB,MAAMwJ,SACR,eACA,eACI,c,GAvParI,IAAMC,WCD1B8J,E,kDACnB,WAAYnL,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXoJ,aAAc,GACd7I,QAAS,EAAKR,MAAMsJ,MAAMC,OAAOC,UACjC4B,SAAU,GACVtJ,MAAO,EACPuJ,YAAa,IACbC,cAAe,EACfrJ,SAAU,GACVsJ,aAAc,EACd7I,MAAO,GACPvC,YAAY,EACZqL,UAAU,EACV9E,UAAU,EACV+E,MAAO,EACPhC,SAAU,KACVC,QAAS,IAEX,EAAKgC,UAAYtK,IAAMuG,YAnBN,E,gEAsBE,IAAD,OACZoC,EAAQ7C,KAAK8C,MAAM5C,aAAa6C,QAAQ,aAAaF,MAC3DvI,KAAK+B,SACH,CACEmG,QAAS,CACPA,QAAS,CACPQ,cAAe,UAAYH,MAIjC,WACE3F,IACGgG,IACC,UAAG9F,wBAAH,WAA4C,EAAKrE,MAAMO,QACvD,EAAKP,MAAMyJ,SAEZnF,MAAK,SAACuF,GACL,IAAMT,EAAeS,EAAS9H,KAC9B,EAAKuB,SAAS,CAAE8F,iBAChBjF,IACGC,KADH,UAEOC,wBAFP,sBAEkD,EAAKrE,MAAMO,SACzD,GACA,EAAKP,MAAMyJ,SAEZnF,MAAK,SAACuF,GACLlG,QAAQC,IAAIiG,MAEb6B,OAAM,SAACC,GAAD,OAASA,KAClBxH,IACGgG,IACC,UAAG9F,wBAAH,SAA0C,EAAKrE,MAAMO,QACrD,EAAKP,MAAMyJ,SAEZnF,MAAK,SAACuF,GACL,EAAK+B,QAAQ,EAAK5L,MAAMoJ,cACxB,IAAMpH,EAAW6H,EAAS9H,KAAKC,SAC/B,EAAKsB,SAAS,CAAEtB,wB,8BAOtBV,GACN,IAAMuK,EAAgBvK,EACnBK,KAAI,SAACyD,GAAD,MAAQ,CAAE0G,KAAMC,KAAKC,SAAUhH,MAAOI,MAC1C0G,MAAK,SAAC1G,EAAG6G,GAAJ,OAAU7G,EAAE0G,KAAOG,EAAEH,QAC1BnK,KAAI,SAACyD,GAAD,OAAOA,EAAEJ,SAChBzD,KAAK+B,SAAS,CACZ6H,SAAUU,EACVhK,MAAO,EACPuJ,YAAa,IACbG,UAAU,EACV9E,UAAU,M,6BAIZ,IAAM2E,EAAyC,MAA3B7J,KAAKvB,MAAMoL,YAAsB,IAAM,IACrDI,EAAQjK,KAAKvB,MAAMwL,MAAQ,EACjCjK,KAAK+B,SAAS,CACZ8H,YAAaA,EACbI,MAAOA,EACP/E,UAAU,M,iCAKmB,MAA3BlF,KAAKvB,MAAMoL,YACb7J,KAAKxB,MAAM2K,QAAQC,KAAnB,SACsC,IAA7BpJ,KAAKvB,MAAMqL,cACpB9J,KAAK+B,SAAS,CACZ8H,YAAa,IACb3E,UAAU,IAGZlF,KAAKxB,MAAM2K,QAAQC,KAAnB,W,+BAIKuB,EAAGlD,GAAO,IAAD,OACVmD,EAAI5K,KAAKvB,MAAM6B,MAAQ,EACvBuK,EAAM7K,KAAKvB,MAAMqL,cAAgB,EACjCC,EAAe/J,KAAKvB,MAAMsL,aAAeY,EAC/CvI,QAAQC,IAAIsI,GACZ/H,IACGyF,IADH,UAEOvF,wBAFP,0BAEsD9C,KAAKvB,MAAMO,QAFjE,YAE4EyI,EAAKC,IAFjF,YAEwFiD,GACpF,GACA3K,KAAKvB,MAAMyJ,SAEZnF,MAAK,SAACuF,GACLlG,QAAQC,IAAIiG,MAEhBtI,KAAK+B,SACH,CACEzB,MAAOsK,EACPd,cAAee,EACfd,aAAcA,EACdE,MAAO,EACP/E,UAAU,IAEZ,WACM0F,IAAM,EAAKnM,MAAMoJ,aAAa1H,OAChC,EAAK4B,SACH,CACEiI,UAAU,EACVH,YAAa,KAEf,EAAKiB,YAGP,EAAK/I,SAAS,CACZ8H,YAAa,IACbG,UAAU,S,+BAOV,IAAD,OACDvC,EAAOzH,KAAKvB,MAAMmL,SAAS5J,KAAKvB,MAAM6B,OACtCyK,EAAW,WACf,OAAItD,GAAmC,MAA3B,EAAKhJ,MAAMoL,YAEnB,kBAACnH,EAAA,EAAD,CAAKnD,UAAS,qCACZ,kBAACgB,EAAA,EAAD,CAAKhB,UAAS,QAAWmB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIE,GAAI,IACnD,kBAACC,EAAA,EAAD,CACExB,UAAS,qBAAgB,EAAKd,MAAMgC,UACpCwE,QAAS,WACP,EAAK+F,SAGP,8BAAOvD,EAAKL,SAGhB,kBAAC7G,EAAA,EAAD,CAAKhB,UAAS,QAAWmB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIE,GAAI,IACnD,kBAACC,EAAA,EAAD,CACExB,UAAS,qBAAgB,EAAKd,MAAMgC,UACpCwE,QAAS,WACP,EAAK+F,SAGN,IACD,8BAAOvD,EAAKJ,UAKgB,MAA3B,EAAK5I,MAAMoL,YAElB,kBAACtJ,EAAA,EAAD,CACEhB,UAAS,sBAAiB,EAAKd,MAAMgC,UACrCC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJE,GAAI,IAEJ,kBAACC,EAAA,EAAD,CAAMxB,UAAU,WACd,qEACmC,EAAKd,MAAMsL,aAD9C,mBACqE,EAAKtL,MAAMqL,cADhF,mBAEE,6BAFF,+BAIOmB,WACN,EAAKxM,MAAMsL,aAAe,EAAKtL,MAAMqL,cAAiB,KACvDoB,QAAQ,GANR,MAMgB,OAMf,sCAWX,OACE,oCACE,kBAAC5I,EAAA,EAAD,KACE,0BAAMC,QAAQ,UACd,+BAAQvC,KAAKvB,MAAMyC,MAAnB,iBAEF,kBAAC,EAAD,CAAKA,MAAOlB,KAAKvB,MAAMyC,MAAOrC,OAAO,WACrC,kBAAC2D,EAAA,EAAD,CAAWC,OAAK,EAACxD,GAAG,UAClB,kBAACyD,EAAA,EAAD,CAAKnD,UAAU,mDACb,kBAACgB,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GAC7B,4BACEmE,QAAS,WACP,EAAK+F,SAFT,wBASJ,kBAACtI,EAAA,EAAD,CAAKnD,UAAS,4CA1Bd,EAAKd,MAAMwL,MAAQ,GAAK,EAAKxL,MAAMwL,MAAQ,IAAM,EAC5C,UACE,EAAKxL,MAAMwL,MAAQ,GAAK,EAAKxL,MAAMwL,MAAQ,IAAM,EACnD,YACK,KAuBR,kBAACc,EAAD,OAEF,kBAACrI,EAAA,EAAD,CAAKnD,UAAU,+CACb,kBAACgB,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAC5B,4BACE7B,GAAG,UACHiG,SAAUlF,KAAKvB,MAAMyG,SACrBD,QAAS,WACP,EAAKkG,SAAS,EAAG1D,KAJrB,mBAUF,kBAAClH,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAC5B,4BACE7B,GAAG,YACHiG,SAAUlF,KAAKvB,MAAMyG,SACrBD,QAAS,WACP,EAAKkG,SAAS,EAAG1D,KAJrB,wBAWJ,kBAAC/E,EAAA,EAAD,CAAKnD,UAAU,gDACb,kBAACgB,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GAC7B,4BACE7B,GAAG,YACHgG,QAAS,WACP,EAAKoF,QAAQ,EAAK5L,MAAMoJ,gBAH5B,eAQK,IACP,kBAACtH,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GAC7B,4BACE7B,GAAG,MACHsH,IAAKvG,KAAKkK,UACVjF,QAAS,WACP,EAAK6F,aAJT,uB,GAxQ6BlL,IAAMC,WCJ5BuL,E,kDACnB,WAAY5M,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,kBAACiE,EAAA,EAAD,CAAKnD,UAAU,0BACb,kBAACgB,EAAA,EAAD,CAAKI,GAAI,GAAIpB,UAAU,aACrB,4BACE+G,aAActG,KAAKxB,MAAMiC,SACzBkE,SAAU3E,KAAKxB,MAAM6M,gBACrBnG,SAAUlF,KAAKxB,MAAM0G,UAErB,4BAAQzB,MAAM,GAAGyB,UAAQ,GAAzB,uBAGA,4BAAQzB,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,gB,GAvB0B7D,IAAMC,WCMvByL,E,kDACnB,WAAY9M,GAAQ,IAAD,8BACjB,cAAMA,IAyDR6M,gBAAkB,SAAC/H,GACjB,EAAKvB,SAAS,CACZtB,SAAU6C,EAAEE,OAAOC,SA1DrB,EAAKsD,QAAUnH,IAAMuG,YACrB,EAAK1H,MAAQ,CACXyC,MAAO,KACP+F,eAAgB,KAChBQ,KAAM,KACNzI,QAAS,KACT6H,MAAO,KACPK,UAAW,KACXqE,UAAW,KACX9K,SAAU,IAXK,E,wDAeP0H,GACV,IAAMqD,EAAOrD,EACb,GAAIqD,EAAKrL,OAAS,EAChBH,KAAK+B,SAAS,CACZ8E,MAAO,oDAEJ,CACL,IAAM7H,EAAUwM,EACbvK,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBwK,cACHzL,KAAK+B,SAAS,CACZb,MAAOsK,EACP3E,MAAO,KACP7H,QAASA,O,iCAKJmJ,GAAI,IAAD,OACNqD,EAAOrD,EACb,GAAIqD,EAAKrL,OAAS,EAChBH,KAAK+B,SAAS,CACZmF,UAAW,0CAER,CACLlH,KAAK+B,SACH,CACEkF,eAAgBuE,EAChBtE,UAAW,OAEb,WACEwE,WAAW,EAAKC,YAAa,QAIf3L,KAAKvB,MAAMO,W,kCAapB,IAAD,OACJoJ,EAAO,CACXlH,MAAOlB,KAAKvB,MAAMyC,MAClBC,YAAanB,KAAKvB,MAAMwI,eACxBxG,SAAUT,KAAKvB,MAAMgC,SACrBzB,QAASgB,KAAKvB,MAAMO,SAIhB4M,EAAWhG,aAAa6C,QAAQ,YAChC1J,EAAO2G,KAAK8C,MAAMoD,GAKlB1D,GAJSnJ,EAAK8M,oBAAoBnE,IAC1B3I,EAAK8M,oBAAoBC,MAGvB,CACd5D,QAAS,CACPQ,cAAe,UAJL3J,EAAKwJ,SAQf/H,EAAO,GACX4B,QAAQC,IAAI6F,GACZtF,IACGC,KADH,UACWC,wBADX,QACgDsF,EAAMF,GACnDnF,MAAK,SAACuF,GACL9H,EAAO8H,EAAS9H,KAChB4B,QAAQC,IAAI7B,GACZ,EAAKhC,MAAM2K,QAAQC,KAAK,CACtB/E,SAAS,cAAD,OAAgB7D,EAAKkH,IAArB,SACRjJ,MAAO,CACLyC,MAAO,EAAKzC,MAAMyC,MAClBC,YAAa,EAAK1C,MAAMwI,eACxBxG,SAAU,EAAKhC,MAAMgC,SACrBzB,QAASwB,EAAKkH,IACd6D,UAAW/K,EAAKkH,Y,+BAMxB,OACE,oCACE,kBAACpF,EAAA,EAAD,KACE,0BAAMC,QAAQ,UACd,+DAEF,kBAAC,EAAD,CAAKrB,MAAO,YAAarC,OAAQ,WACjC,kBAAC2D,EAAA,EAAD,CAAWC,OAAK,EAAClD,UAAWS,KAAKvB,MAAMgC,UACrC,yBAAKlB,UAAU,WACb,6EACA,kBAAC,EAAD,CACE8L,gBAAiBrL,KAAKqL,gBACtB5K,SAAUT,KAAKvB,MAAMgC,SACrByE,UAAU,IAEa,KAAxBlF,KAAKvB,MAAMgC,UACV,kBAAC,EAAD,CACE2F,YAAapG,KAAKoG,YAAYmD,KAAKvJ,MACnCkB,MAAOlB,KAAKvB,MAAMyC,MAClB2F,MAAO7G,KAAKvB,MAAMoI,MAClBD,WAAY,eAGM,OAArB5G,KAAKvB,MAAMyC,OACV,kBAAC,EAAD,CACE8F,WAAYhH,KAAKgH,WAAWuC,KAAKvJ,MACjCkB,MAAOlB,KAAKvB,MAAMwI,eAClBJ,MAAO7G,KAAKvB,MAAMyI,mB,GArIMtH,IAAMC,WCHzB8J,E,uKAEjB,OACE,oCACG,IACD,kBAACrH,EAAA,EAAD,KACE,0BAAMC,QAAQ,UACd,mDAEF,kBAAC,EAAD,CAAKrB,MAAK,YAAerC,OAAO,WAChC,kBAAC2D,EAAA,EAAD,CAAWC,OAAK,EAAClD,UAAU,cACzB,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,0BACb,kBAACgB,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGE,GAAI,GAA/B,wBAEE,6BACA,6BACA,kBAAC,IAAD,CAAMhC,GAAE,SAAR,8B,GAhB6Bc,IAAMC,WCmClCkM,G,8KAzBX,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAW5K,IACrC,kBAAC,IAAD,CAAO0K,OAAK,EAACC,KAAK,IAAIC,UAAW9G,IACjC,kBAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,UAAUC,UAAW9I,IACvC,kBAAC,IAAD,CAAO6I,KAAK,6BAA6BC,UAAWtE,IACpD,kBAAC,IAAD,CAAOqE,KAAK,yBAAyBC,UAAWvC,IAChD,kBAAC,IAAD,CAAOsC,KAAK,mBAAmBE,WAAYxC,IAC3C,kBAAC,IAAD,CAAOsC,KAAK,OAAOC,UAAWZ,IAE9B,kBAAC,IAAD,CAAOW,KAAK,IAAIC,UAAWH,GACnB,kBAAC,IAAD,CAAUjN,GAAG,OAErB,kBAAC,IAAD,CAAOoN,UAAWE,W,GAjBZxM,IAAMC,YCFJwM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1E,MACvB,2DCVN2E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjK,MAAK,SAAAkK,GACJA,EAAaC,gBAEd/C,OAAM,SAAA/F,GACLhC,QAAQgC,MAAMA,EAAM+I,a,mBEzI5BnP,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.5a8836b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/line_w.25f79b17.png\";","import firebase from 'firebase';\n// Required for side-effects\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n    apiKey: 'AIzaSyDCeQIhbuvK-nWNhBZ_FwgrklePo2AbZA4',\n    authDomain: 'rf-app-journal.firebaseapp.com',\n    projectId: 'rf-app-journal'\n});\n","import React from \"react\";\nimport { faBrain } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Top extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardSetsDefault: [],\n      isSignedIn: false,\n    };\n  }\n\n  render() {\n    const Action = () => {\n      if (this.props.action === \"create\") {\n        return <Link to={`/new`}>Create a set +</Link>;\n      }\n      if (this.props.action === \"cancel\") {\n        return <Link to={`/home`}>Main Menu </Link>;\n      }\n      if (this.props.user === true && this.props.action === \"start\") {\n        return (\n          <Link to={`/set/yours/${this.props.entryId}/`}>Test these cards</Link>\n        );\n      }\n    };\n\n    return (\n      <div id=\"top\">\n        <div >\n          <Link to={`/flashcards/home`}>\n            {/* <FontAwesomeIcon icon={faBrain} size=\"lg\" color=\"#ffffff\" /> */}\n            <img src={require('./Images/line_w.png')} alt=\"Logo\"  width=\"15%\" height=\"15%\"/>\n           \n          </Link>\n        </div>\n       \n        <div className=\"role\" >\n          <Link to={`/flashcards/Role`}>\n         <FontAwesomeIcon icon={faUserCog} size=\"lg\" color=\"#ffffff\" /> \n           </Link>\n         </div>\n        {/* <div>{this.props.title}</div> */}\n        <div className=\"action\">\n          <Action />\n        </div>\n        \n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default class SetList extends React.Component {\n  render() {\n    const cards = this.props.cards;\n    const editable = this.props.editable;\n    const Tiles = () => {\n      if (cards.length > 0) {\n        return cards.map((set, index) => (\n          <Col\n            className={`h-100 ${set.data().category}`}\n            md={6}\n            xs={12}\n            lg={4}\n            key={index}\n            xl={3}\n          >\n            <Card>\n              <Card.Body>\n                <h4>{set.data().category.replace(\"-\", \" \")}</h4>\n                <h2>{set.data().title}</h2>\n                <p>{set.data().description}</p>\n                <p className=\"source\">\n                  {this.props.editable\n                    ? \"Created by you\"\n                    : \"Created by BrainKwik\"}\n                </p>\n                <div className=\"buttons\">\n                  <Link\n                    to={\n                      editable === false\n                        ? `/set/${set.id}`\n                        : `/set/yours/${set.id}`\n                    }\n                  >\n                    <div className=\"button\">Test Yourself</div>\n                  </Link>\n                  {this.props.editable === true ? (\n                    <Link to={`/set/yours/${set.id}/edit`}>\n                      <div className=\"button\">Edit this set</div>\n                    </Link>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        ));\n      } else {\n        return <></>;\n      }\n    };\n\n    return <Tiles />;\n  }\n}\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport Top from \"./Top\";\nimport SetList from \"./SetList\";\nimport { Card, Col, Row, Container } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\n\nimport { Link } from \"react-router-dom\";\n\nconst db = firebase.firestore();\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardSetsDefault: [],\n      isSignedIn: false,\n      yourCards: [],\n    };\n  }\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.default = db.collection(\"defaultcards\").onSnapshot((snapshot) => {\n        this.setState({\n          cardSetsDefault: snapshot.docs,\n        });\n      });\n\n      this.setState({ isSignedIn: !!user }, () => {\n        const uid = firebase.auth().currentUser.uid;\n        this.yourCards = db\n          .collection(\"users\")\n          .doc(uid)\n          .collection(\"yourCards\")\n          .onSnapshot((snapshot) => {\n            console.log(1);\n            this.setState({\n              yourCards: snapshot.docs,\n            });\n          });\n      });\n    });\n  }\n  componentWillUnmount() {\n    if (this.default) {\n      this.default();\n    }\n    if (this.yourCards) {\n      this.yourCards();\n    }\n  }\n  render() {\n    const cardSetsDefault = this.state.cardSetsDefault;\n    const yourCards = this.state.yourCards;\n\n    const { isSignedIn } = this.state;\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Flashcards</title>\n        </Helmet>\n        <Top title={\"FlashCards\"} action={\"create\"} />\n        <Container fluid>\n          <div className=\"content\">\n            <h1>Create a set or test yourself</h1>\n            <Row>\n              {isSignedIn && (\n                <Col className=\"new h-100\" md={12} xs={12} lg={4} xl={6}>\n                  <Link to={`/new`}>\n                    <Card>\n                      <Card.Body>\n                        <h2>Create a new cardset</h2>\n                        <h3>Easy learning in a flash</h3>\n                        <div className=\"addSet\">+</div>\n                      </Card.Body>\n                    </Card>\n                  </Link>\n                </Col>\n              )}\n              {isSignedIn && (\n                <SetList cards={cardSetsDefault} editable={false} />\n              )}\n              {isSignedIn && <SetList cards={yourCards} editable={true} />}\n            </Row>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport { faBrain } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Helmet } from \"react-helmet\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n//SignUp service connect express login/SignUp route to user entered data\nconst UserRegistration = data => {\n  return axios.post(`${process.env.REACT_APP_BASEURI}/login/signup`, data)\n      .then(res => res.status);\n};\n\n//User Validation service connect express login/user route to check user entered data \nexport const UserValidation = data => (\n  axios.post(`${process.env.REACT_APP_BASEURI}/login/user`, data)\n  .then(exist => exist.status)\n)\n\n//Email Vaidation service connect express login/emailcheck route to check user entered email ..to not allow duplicate email entried  \nexport const EmailValidation = data => (\n  axios.post(`${process.env.REACT_APP_BASEURI}/login/emailcheck`, data)\n  .then(exist => exist.status)\n)\n\nclass SignUp extends React.Component {\n  \n\n  //Saving SignUp State\n  constructor (props) \n  {\n    super (props);\n    this.state = \n    {\n      email: '',\n      password: '',\n      register:false,\n      error:false,\n    };\n  }\n\n  //Saving Email and Password Entered values to states \n  handleOnChangeEmail = e => \n  {\n    this.setState \n    ({\n      email: e.target.value,\n    });\n  };\n\n  handleOnChangePassword = e => \n  {\n    this.setState \n    ({\n      password: e.target.value,\n    });\n  };\n\n  handleOnBlur = async e => {\n    this.setState ({\n      email: e.target.value,\n    });\n    const data = {\n      email: this.state.email,\n    };\n    const isEmailTaken = await EmailValidation (data);\n\n    isEmailTaken === 204\n      ?  this.setState ({email_taken: true} )\n      : this.setState ({email_taken: false} );\n\n      isEmailTaken === 204\n      ?  this.setState ({error_email_exists:\"Email already exists. Try Login Instead!\"})\n      : this.setState ({error_email_exists:\"\"});\n  };\n\n  //On Submit button click sending data from saved state to express Login/signup routes \n  onSubmit = async e => \n  {\n    e.preventDefault ();\n    const data = \n    {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    const registerStatus = await UserRegistration (data);\n     if (registerStatus === 200) \n     {\n      this.setState \n      ({\n        email: '',\n        password: '',\n        register: true,\n        error: false,\n      });\n     }\n     else\n      this.setState \n      ({\n        error: true,\n        register: false,\n      });\n  };\n\n  // Configure FirebaseUI.\n\n  // uiConfig = {\n  //   signInFlow: \"popup\",\n  //   signInOptions: [\n  //     firebase.auth.EmailAuthProvider.PROVIDER_ID,\n  //     firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  //   ],\n  //   callbacks: {\n  //     signInSuccessWithAuthResult: () => {\n  //       setTimeout(this.props.history.push(\"/home\"), 1000);\n  //     },\n  //   },\n  // };\n  render() {\n    const {register, error, email_taken, error_email_exists}=this.state; \n    if (this.state.register ) {\n      return <Redirect to = {{ pathname: \"/new\" }} />;\n    } \n    if (!this.props.isSignedIn ) {\n      return (\n        <Container fluid className=\"login\">\n          <div id=\"welcome\">       \n          </div>\n          <div id=\"signup\">\n            <Row className={`justify-content-center`}>\n              <Col>\n              <div id=\"welcome\">\n              <h1></h1>\n                <img src={require('./Images/flashcardsbg.jpg')} alt=\"Logo\"  width=\"100%\" height=\"100%\" />\n               </div>\n              </Col>\n              <Col className={`h-100`} md={6} xs={12} lg={6} xl={6}>\n                <h7> <Button  href=\"#text-buttons\">LOGIN</Button>\n                </h7>\n                <h4>SIGN-UP</h4>\n                {/* <StyledFirebaseAuth\n                  uiConfig={this.uiConfig}\n                  firebaseAuth={firebase.auth()}\n                /> */}\n              <br/>\n             <h5>\n            <TextField\n                id=\"outlined-helperText\"\n                label=\"E-mail\"\n                variant=\"outlined\"\n                onChange={this.handleOnChangeEmail}\n                onBlur={this.handleOnBlur}\n                helperText={error_email_exists}\n                required\n            />\n            <br/>\n            <br/>\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                onChange={this.handleOnChangePassword}\n              />\n             </h5>\n           <br/>\n           <br/>\n           <h6>\n\n           {/* <Link to=\"/flashcards/#/new\"> */}\n           <Button variant=\"contained\"\n           onClick ={this.onSubmit} \n           disabled={email_taken} \n           color=\"secondary\"\n           href=\"/flashcards/#/new\"\n           >\n                Sign-Up\n            </Button>\n            {/* </Link> */}\n            </h6>\n               &nbsp; &nbsp;&nbsp;&nbsp;\n              </Col>\n            </Row>\n            {/* <Row className={`justify-content-center`}>\n              <Col className={`h-100`} md={6} xs={12} lg={6} xl={6}>\n                <StyledFirebaseAuth\n                  uiConfig={this.uiConfig}\n                  firebaseAuth={firebase.auth()}\n                />\n              </Col>\n            </Row> */}\n          </div>\n\n        </Container>\n      );\n    } \n    else {\n      return <></>;\n    }\n\n    \n\n  }\n}\n\nexport default SignUp;\n","import React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport { faBrain } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Helmet } from \"react-helmet\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SignUp from \"./SignUp\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Alert } from \"@material-ui/lab\";\nimport { grey } from \"@material-ui/core/colors\";\n\n//service to send login credential to express backend\nconst LoginService = (data) =>\n  axios.post(`${process.env.REACT_APP_BASEURI}/login`, data).then((res) => res);\n\n//Email Vaidation service connect express login/emailcheck route to check user entered email ..to not allow duplicate email entried\nconst EmailValidation = (data) =>\n  axios\n    .post(`${process.env.REACT_APP_BASEURI}login/emailcheck`, data)\n    .then((exist) => exist.status);\n\nclass SignIn extends React.Component {\n  //constructor to save initial empty state\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: false,\n      loginSuccess: false,\n    };\n  }\n\n  //called when user moves out of email input field\n  handleOnChangeEmail = (e) => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  //called when user moves out of password input field\n  handleOnChangePassword = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  //checking if entered email doesn't exist is database and require sign up instead of signin\n  handleOnBlur = async (e) => {\n    this.setState({\n      email: e.target.value,\n    });\n    const data = {\n      email: this.state.email,\n    };\n    const isEmailTaken = await EmailValidation(data);\n\n    isEmailTaken === 204\n      ? this.setState({ sign_up_reqd: false })\n      : this.setState({ sign_up_reqd: true });\n\n    isEmailTaken === 204\n      ? this.setState({ error_sign_up_reqd: \"\" })\n      : this.setState({\n          error_sign_up_reqd: \"User does not exist. Sign-Up First!\",\n        });\n  };\n\n  // sending login information to express route after submit button is pressed\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    this.setState({ wrong_password: true });\n    const data = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n    const loginResult = await LoginService(data);\n    console.log(`Test ${loginResult.status}`);\n    if (loginResult.status !== 200) {\n      console.log(\"Log in Failed.\");\n      this.setState({\n        loginSuccess: false,\n        error: true,\n      });\n    } else {\n      console.log(\"Log in Success.\");\n      console.log(JSON.stringify(loginResult.data));\n      localStorage.setItem(\"userData\", JSON.stringify(loginResult.data));\n      this.setState({\n        loginSuccess: true,\n        error: false,\n      });\n    }\n    this.forceUpdate();\n  };\n\n  render() {\n    if (this.state.loginSuccess) {\n      return <Redirect to={{ pathname: \"/new\" }} />;\n    }\n    const {\n      error,\n      sign_up_reqd,\n      error_sign_up_reqd,\n      wrong_password,\n    } = this.state;\n    return (\n      <Container fluid className=\"login\">\n        <div id=\"login\">\n          <Row className={`justify-content-center`}>\n            <Col>\n              <div id=\"welcome\">\n                <h1></h1>\n                <img\n                  src={require(\"./Images/flashcardsbg.jpg\")}\n                  alt=\"Logo\"\n                  width=\"100%\"\n                  height=\"100%\"\n                />\n              </div>\n            </Col>\n            <Col className={`h-100`} md={6} xs={12} lg={6} xl={6}>\n              <h7>\n                {\" \"}\n                <Button href=\"/flashcards/#/signup\">Sign-Up</Button>\n              </h7>\n              <h4>LOGIN</h4>\n              <br />\n              <h5>\n                <TextField\n                  id=\"outlined-helperText\"\n                  label=\"E-mail\"\n                  variant=\"outlined\"\n                  onChange={this.handleOnChangeEmail}\n                  onBlur={this.handleOnBlur}\n                  helperText={error_sign_up_reqd}\n                  required\n                />\n                <br />\n                <br />\n                <TextField\n                  id=\"outlined-password-input\"\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  variant=\"outlined\"\n                  onChange={this.handleOnChangePassword}\n                  required\n                />\n              </h5>\n              <h6>\n                {/* <Link to=\"/flashcards/#/new\"> */}\n                <Button\n                  variant=\"contained\"\n                  onClick={this.onSubmit}\n                  disabled={sign_up_reqd}\n                  color=\"secondary\"\n                  href=\"/flashcards/#/new\"\n                >\n                  Log-In\n                </Button>\n                {/* </Link> */}\n              </h6>\n              <h3>\n                {wrong_password && (\n                  <Alert severity=\"error\">\n                    Unable to log in. Please check your username and password.\n                  </Alert>\n                )}\n              </h3>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport default class Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.titleRef = React.createRef();\n  }\n\n  render() {\n    const updateTitle = this.props.updateTitle;\n    return (\n      <div className=\"title\">\n        <Row className=\"justify-content-center\">\n          <Col xs={10}>\n            <input\n              text=\"true\"\n              defaultValue={this.props.title}\n              ref={this.titleRef}\n              minLength=\"4\"\n              id=\"titleInput\"\n              maxLength=\"50\"\n              placeholder={\n                this.props.title === null ? \"Give your card set a title.\" : null\n              }\n            ></input>\n\n            <button\n              onClick={() => {\n                updateTitle(this.titleRef.current.value);\n              }}\n            >\n              {this.props.buttonText}\n            </button>\n            <div className=\"alert\">{this.props.alert}</div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport default class Description extends React.Component {\n  constructor(props) {\n    super(props);\n    this.descRef = React.createRef();\n  }\n\n  render() {\n    const updateDesc = this.props.updateDesc;\n    return (\n      <div className=\"description\">\n        <Row className=\"justify-content-center\">\n          <Col xs={10}>\n            {\" \"}\n            <input\n              text=\"true\"\n              id=\"descInput\"\n              ref={this.descRef}\n              defaultValue={this.props.descriptionVal}\n              minLength=\"4\"\n              placeholder={\n                this.props.descriptionVal === null ? \"Describe the set.\" : null\n              }\n            ></input>\n            <button\n              onClick={() => {\n                updateDesc(this.descRef.current.value);\n              }}\n            >\n              Save description\n            </button>\n            <div className=\"alert\">{this.props.descAlert}</div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Col, Row, Card } from \"react-bootstrap\";\n\nexport default class IndividualCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sideA = React.createRef();\n    this.sideB = React.createRef();\n  }\n\n  render() {\n    const updateSideA = this.props.updateSideA;\n    const updateSideB = this.props.updateSideB;\n    const deleteCard = this.props.deleteCard;\n    const card = this.props.card;\n    const category = this.props.category;\n    return (\n      <div key={card._id} className=\"cardEdit\">\n        <Row className=\"justify-content-center deleteHold\">\n          <Col md={5} xs={10} lg={5} xl={5}>\n            <button\n              class=\"deleteCard\"\n              onClick={() => {\n                deleteCard(card);\n              }}\n            >\n              Delete the card below\n            </button>\n          </Col>\n        </Row>\n        <Row>\n          <Col\n            className={`h-100 sideA ${category}`}\n            md={6}\n            xs={12}\n            lg={6}\n            xl={6}\n          >\n            <Card>\n              <textarea placeholder={\"Type here for side A\"} ref={this.sideA}>\n                {card.sideA}\n              </textarea>\n              <button\n                onClick={() => {\n                  updateSideA(this.sideA.current.value, card);\n                }}\n              >\n                Save Side A\n              </button>\n            </Card>\n          </Col>\n          <Col\n            className={`h-100 sideB ${category}`}\n            md={6}\n            xs={12}\n            lg={6}\n            xl={6}\n          >\n            <Card>\n              <textarea placeholder={\"Type here for side B\"} ref={this.sideB}>\n                {card.sideB}\n              </textarea>\n              <button\n                onClick={() => {\n                  updateSideB(this.sideB.current.value, card);\n                }}\n              >\n                Save Side B\n              </button>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Top from \"./Top\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport Description from \"./Description\";\nimport IndividualCard from \"./IndividualCard\";\nimport { Helmet } from \"react-helmet\";\nimport axios from \"axios\";\nexport default class CardsetEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCards: [],\n      entryId: this.props.match.params.urlString,\n      title: \"\",\n      descriptionVal: \"\",\n      category: \"\",\n      set: null,\n      isSignedIn: false,\n      disabled: true,\n      alert: null,\n      isPublic: null,\n      headers: {},\n    };\n  }\n  updateTitle(n) {\n    console.log(n);\n    const name = n;\n    const body = {\n      title: name,\n      description: this.state.descriptionVal,\n      category: this.state.category,\n    };\n    axios\n      .put(\n        `${process.env.REACT_APP_BASEURI}/set/` + this.state.entryId,\n        body,\n        this.state.headers\n      )\n      .then((response) => {\n        console.log(response.data);\n      });\n  }\n\n  updateDesc(n) {\n    const name = n;\n    const body = {\n      description: name,\n      title: this.state.title,\n      category: this.state.category,\n    };\n    axios.put(\n      `${process.env.REACT_APP_BASEURI}/set/` + this.state.entryId,\n      body,\n      this.state.headers\n    );\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem(\"userData\")).token;\n    this.setState(\n      {\n        headers: {\n          headers: {\n            Authorization: \"Bearer \" + token,\n          },\n        },\n      },\n      () => {\n        console.log(this.state.headers);\n        this.getCards();\n        axios\n          .get(\n            `${process.env.REACT_APP_BASEURI}/set/` + this.state.entryId,\n            this.state.headers\n          )\n          .then((response) => {\n            const resdata = response.data;\n            this.setState({\n              title: resdata.title,\n              descriptionVal: resdata.description,\n              category: resdata.category,\n              isPublic: resdata.isPublic,\n            });\n          });\n      }\n    );\n  }\n\n  updateSideA(val, card) {\n    let changer = val;\n    if (changer !== null) {\n      const body = { sideA: changer, sideB: card.sideB };\n      axios\n        .put(\n          `${process.env.REACT_APP_BASEURI}/cards/` +\n            this.state.entryId +\n            \"/\" +\n            card._id,\n          body,\n          this.state.headers\n        )\n        .then((response) => {\n          this.getCards();\n        });\n    } else if (changer === \"\" || changer === null) {\n      return false;\n    }\n  }\n\n  updateSideB(val, card) {\n    let changer = val;\n    if (changer !== null) {\n      const body = { sideB: changer, sideA: card.sideA };\n      axios\n        .put(\n          `${process.env.REACT_APP_BASEURI}/cards/` +\n            this.state.entryId +\n            \"/\" +\n            card._id,\n          body,\n          this.state.headers\n        )\n        .then((response) => {\n          this.getCards();\n        });\n    } else if (changer === \"\" || changer === null) {\n      return false;\n    }\n  }\n  deleteCard(card) {\n    const url =\n      `${process.env.REACT_APP_BASEURI}/cards/delete/` +\n      this.state.entryId +\n      \"/\" +\n      card._id;\n    axios.delete(url, this.state.headers).then((response) => {\n      this.getCards();\n    });\n  }\n  addCard() {\n    const body = { sideA: null, sideB: null, setId: this.state.entryId };\n    const url = `${process.env.REACT_APP_BASEURI}/cards/` + this.state.entryId;\n    axios.post(url, body, this.state.headers).then((response) => {\n      this.getCards();\n    });\n  }\n\n  deleteSet() {\n    const url = `${process.env.REACT_APP_BASEURI}/set/` + this.state.entryId;\n    axios.delete(url, this.state.headers).then((response) => {\n      this.props.history.push({\n        pathname: `/home`,\n      });\n    });\n  }\n  makePublic() {\n    const pub = this.state.isPublic === true ? false : true;\n    this.setState({ isPublic: pub }, () => {\n      const url = `${process.env.REACT_APP_BASEURI}/set/public/${this.state.entryId}/`;\n      axios.put(url, { isPublic: pub }, this.state.headers).then((response) => {\n        console.log(response);\n      });\n    });\n  }\n  getCards() {\n    axios\n      .get(\n        `${process.env.REACT_APP_BASEURI}/cards/` + this.state.entryId,\n        this.state.headers\n      )\n      .then((response) => {\n        const currentCards = response.data;\n        this.setState({ currentCards });\n      })\n      .then(() => {\n        console.log(this.state.currentCards);\n      });\n  }\n  render() {\n    const List = this.state.currentCards.map((card, index) => {\n      return (\n        <IndividualCard\n          card={card}\n          updateSideA={this.updateSideA.bind(this)}\n          updateSideB={this.updateSideB.bind(this)}\n          deleteCard={this.deleteCard.bind(this)}\n          category={this.state.category}\n        />\n      );\n    });\n\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{this.state.title} - Editing a Card Set | BrainKwik</title>\n        </Helmet>\n        <Top\n          user={true}\n          title={\"BrainKwik\"}\n          entryId={this.state.entryId}\n          addCard={this.addCard.bind(this)}\n          action={\"start\"}\n        />\n        <Container fluid className=\"editing\">\n          <div className=\"content\">\n            <Title\n              updateTitle={this.updateTitle.bind(this)}\n              title={this.state.title}\n              alert={this.state.alert}\n              buttonText={\"Save title\"}\n            />\n            <Description\n              updateDesc={this.updateDesc.bind(this)}\n              descriptionVal={this.state.descriptionVal}\n              alert={this.state.descAlert}\n            />\n            <div>\n              {this.state.currentCards.length > 0 && List}\n              <Row className=\"justify-content-center\">\n                <Col md={3} xs={10} lg={3} xl={3}>\n                  <button\n                    id=\"addCard\"\n                    className=\"editButton\"\n                    onClick={() => {\n                      this.addCard();\n                    }}\n                  >\n                    Add a card\n                  </button>\n                </Col>\n                <Col md={3} xs={10} lg={3} xl={3}>\n                  <button\n                    id=\"deleteSet\"\n                    className=\"editButton\"\n                    onClick={() => {\n                      this.deleteSet();\n                    }}\n                  >\n                    Delete set\n                  </button>{\" \"}\n                </Col>\n\n                <Col md={3} xs={10} lg={3} xl={3}>\n                  <button\n                    className=\"editButton\"\n                    id=\"makePub\"\n                    onClick={() => {\n                      this.makePublic();\n                    }}\n                  >\n                    {this.state.isPublic === true\n                      ? \"Make private\"\n                      : \"Make public\"}\n                  </button>{\" \"}\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport { Card, Col, Row, Container } from \"react-bootstrap\";\nimport Top from \"./Top\";\nimport { Helmet } from \"react-helmet\";\nimport axios from \"axios\";\n\nexport default class CardsetAnswer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCards: [],\n      entryId: this.props.match.params.urlString,\n      shuffled: [],\n      index: 0,\n      currentSide: \"A\",\n      cardsAnswered: 0,\n      category: \"\",\n      cardsCorrect: 0,\n      title: \"\",\n      isSignedIn: false,\n      complete: false,\n      disabled: true,\n      flips: 0,\n      isPublic: null,\n      headers: {},\n    };\n    this.endButton = React.createRef();\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem(\"userData\")).token;\n    this.setState(\n      {\n        headers: {\n          headers: {\n            Authorization: \"Bearer \" + token,\n          },\n        },\n      },\n      () => {\n        axios\n          .get(\n            `${process.env.REACT_APP_BASEURI}/cards/` + this.state.entryId,\n            this.state.headers\n          )\n          .then((response) => {\n            const currentCards = response.data;\n            this.setState({ currentCards });\n            axios\n              .post(\n                `${process.env.REACT_APP_BASEURI}/set/start/${this.state.entryId}`,\n                {},\n                this.state.headers\n              )\n              .then((response) => {\n                console.log(response);\n              })\n              .catch((err) => err);\n            axios\n              .get(\n                `${process.env.REACT_APP_BASEURI}/set/` + this.state.entryId,\n                this.state.headers\n              )\n              .then((response) => {\n                this.shuffle(this.state.currentCards);\n                const category = response.data.category;\n                this.setState({ category });\n              });\n          });\n      }\n    );\n  }\n\n  shuffle(cards) {\n    const shuffledCards = cards\n      .map((a) => ({ sort: Math.random(), value: a }))\n      .sort((a, b) => a.sort - b.sort)\n      .map((a) => a.value);\n    this.setState({\n      shuffled: shuffledCards,\n      index: 0,\n      currentSide: \"A\",\n      complete: false,\n      disabled: true,\n    });\n  }\n  flip() {\n    const currentSide = this.state.currentSide === \"B\" ? \"A\" : \"B\";\n    const flips = this.state.flips + 1;\n    this.setState({\n      currentSide: currentSide,\n      flips: flips,\n      disabled: false,\n    });\n  }\n\n  endStudy() {\n    if (this.state.currentSide === \"C\") {\n      this.props.history.push(`/home`);\n    } else if (this.state.cardsAnswered !== 0) {\n      this.setState({\n        currentSide: \"C\",\n        disabled: true,\n      });\n    } else {\n      this.props.history.push(`/home`);\n    }\n  }\n\n  nextCard(x, card) {\n    const i = this.state.index + 1;\n    const ans = this.state.cardsAnswered + 1;\n    const cardsCorrect = this.state.cardsCorrect + x;\n    console.log(x);\n    axios\n      .put(\n        `${process.env.REACT_APP_BASEURI}/cards/answers/${this.state.entryId}/${card._id}/${x}`,\n        {},\n        this.state.headers\n      )\n      .then((response) => {\n        console.log(response);\n      });\n    this.setState(\n      {\n        index: i,\n        cardsAnswered: ans,\n        cardsCorrect: cardsCorrect,\n        flips: 0,\n        disabled: true,\n      },\n      () => {\n        if (i === this.state.currentCards.length) {\n          this.setState(\n            {\n              complete: true,\n              currentSide: \"C\",\n            },\n            this.endStudy()\n          );\n        } else {\n          this.setState({\n            currentSide: \"A\",\n            complete: false,\n          });\n        }\n      }\n    );\n  }\n\n  render() {\n    const card = this.state.shuffled[this.state.index];\n    const CardSide = () => {\n      if (card && this.state.currentSide !== \"C\") {\n        return (\n          <Row className={`justify-content-center cardHolder`}>\n            <Col className={`h-100`} md={10} xs={12} lg={10} xl={10}>\n              <Card\n                className={`sideA side ${this.state.category}`}\n                onClick={() => {\n                  this.flip();\n                }}\n              >\n                <span>{card.sideA}</span>\n              </Card>\n            </Col>\n            <Col className={`h-100`} md={10} xs={12} lg={10} xl={10}>\n              <Card\n                className={`sideB side ${this.state.category}`}\n                onClick={() => {\n                  this.flip();\n                }}\n              >\n                {\" \"}\n                <span>{card.sideB}</span>\n              </Card>\n            </Col>\n          </Row>\n        );\n      } else if (this.state.currentSide === \"C\") {\n        return (\n          <Col\n            className={`h-100 sideB ${this.state.category}`}\n            md={10}\n            xs={12}\n            lg={10}\n            xl={10}\n          >\n            <Card className=\"endCard\">\n              <span>\n                {`During this session, you got ${this.state.cardsCorrect} out of ${this.state.cardsAnswered} cards correct.`}\n                <br />\n                {`\n            That's ${parseFloat(\n              (this.state.cardsCorrect / this.state.cardsAnswered) * 100\n            ).toFixed(1)}%!`}{\" \"}\n              </span>\n            </Card>\n          </Col>\n        );\n      } else {\n        return <></>;\n      }\n    };\n    const flipped = () => {\n      if (this.state.flips > 0 && this.state.flips % 2 === 1) {\n        return \"flipped\";\n      } else if (this.state.flips > 0 && this.state.flips % 2 === 0) {\n        return \"unflipped\";\n      } else return \"\";\n    };\n\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{this.state.title} | BrainKwik</title>\n        </Helmet>\n        <Top title={this.state.title} action=\"cancel\" />\n        <Container fluid id=\"answer\">\n          <Row className=\"answerButtons justify-content-center topButtons\">\n            <Col md={6} xs={12} lg={6} xl={6}>\n              <button\n                onClick={() => {\n                  this.flip();\n                }}\n              >\n                Click to flip card\n              </button>\n            </Col>\n          </Row>\n          <Row className={`cardAnswer justify-content-center ${flipped()}`}>\n            <CardSide />\n          </Row>\n          <Row className=\"answerButtons justify-content-center result\">\n            <Col md={4} xs={6} lg={4} xl={4}>\n              <button\n                id=\"correct\"\n                disabled={this.state.disabled}\n                onClick={() => {\n                  this.nextCard(1, card);\n                }}\n              >\n                I got it right\n              </button>\n            </Col>\n            <Col md={4} xs={6} lg={4} xl={4}>\n              <button\n                id=\"incorrect\"\n                disabled={this.state.disabled}\n                onClick={() => {\n                  this.nextCard(0, card);\n                }}\n              >\n                I got it incorrect\n              </button>\n            </Col>\n          </Row>\n          <Row className=\"answerButtons  justify-content-center bottom\">\n            <Col md={6} xs={12} lg={6} xl={6}>\n              <button\n                id=\"reshuffle\"\n                onClick={() => {\n                  this.shuffle(this.state.currentCards);\n                }}\n              >\n                Start Over\n              </button>\n            </Col>{\" \"}\n            <Col md={6} xs={12} lg={6} xl={6}>\n              <button\n                id=\"end\"\n                ref={this.endButton}\n                onClick={() => {\n                  this.endStudy();\n                }}\n              >\n                End Session\n              </button>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport default class Category extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Row className=\"justify-content-center\">\n        <Col xs={10} className=\"selectDiv\">\n          <select\n            defaultValue={this.props.category}\n            onChange={this.props.dropdownChanged}\n            disabled={this.props.disabled}\n          >\n            <option value=\"\" disabled>\n              Categorize your set\n            </option>\n            <option value=\"geography\">Geography</option>\n            <option value=\"history\">History</option>\n            <option value=\"pop-culture\">Pop Culture</option>\n            <option value=\"science\">Science</option>\n            <option value=\"sports\">Sports</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React from \"react\";\nimport Top from \"./Top\";\nimport Category from \"./Category\";\nimport Title from \"./Title\";\nimport Description from \"./Description\";\nimport { Container } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\nimport axios from \"axios\";\n\nexport default class NewCardSet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.descRef = React.createRef();\n    this.state = {\n      title: null,\n      descriptionVal: null,\n      card: null,\n      entryId: null,\n      alert: null,\n      descAlert: null,\n      cardSetId: null,\n      category: \"\",\n    };\n  }\n\n  updateTitle(n) {\n    const name = n;\n    if (name.length < 4) {\n      this.setState({\n        alert: \"Title must be at least four characters long\",\n      });\n    } else {\n      const entryId = name\n        .replace(/\\W+/g, \" \")\n        .replace(/\\s+/g, \"-\")\n        .toLowerCase();\n      this.setState({\n        title: name,\n        alert: null,\n        entryId: entryId,\n      });\n    }\n  }\n\n  updateDesc(n) {\n    const name = n;\n    if (name.length < 5) {\n      this.setState({\n        descAlert: \"Please write a longer description\",\n      });\n    } else {\n      this.setState(\n        {\n          descriptionVal: name,\n          descAlert: null,\n        },\n        () => {\n          setTimeout(this.createSet(), 1000);\n        }\n      );\n\n      let entryString = this.state.entryId;\n      let iterate = 0;\n\n      //    this.checkExists(entryString, iterate);\n    }\n  }\n\n  dropdownChanged = (e) => {\n    this.setState({\n      category: e.target.value,\n    });\n  };\n\n  createSet() {\n    const body = {\n      title: this.state.title,\n      description: this.state.descriptionVal,\n      category: this.state.category,\n      entryId: this.state.entryId,\n    };\n\n    //Token from Local Storage\n    const userData = localStorage.getItem(\"userData\");\n    const user = JSON.parse(userData);\n    const userId = user.userWithoutPassword._id;\n    const roles = user.userWithoutPassword.roles;\n    const token = user.token;\n\n    const headers = {\n      headers: {\n        Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n      },\n    };\n\n    let data = {};\n    console.log(headers);\n    axios\n      .post(`${process.env.REACT_APP_BASEURI}/set`, body, headers)\n      .then((response) => {\n        data = response.data;\n        console.log(data);\n        this.props.history.push({\n          pathname: `/set/yours/${data._id}/edit`,\n          state: {\n            title: this.state.title,\n            description: this.state.descriptionVal,\n            category: this.state.category,\n            entryId: data._id,\n            cardSetId: data._id,\n          },\n        });\n      });\n  }\n  render() {\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Create a card set BrainKwik</title>\n        </Helmet>\n        <Top title={\"BrainKwik\"} action={\"cancel\"} />\n        <Container fluid className={this.state.category}>\n          <div className=\"content\">\n            <h1>Here's your chance to create a new study set.</h1>\n            <Category\n              dropdownChanged={this.dropdownChanged}\n              category={this.state.category}\n              disabled={false}\n            />\n            {this.state.category !== \"\" && (\n              <Title\n                updateTitle={this.updateTitle.bind(this)}\n                title={this.state.title}\n                alert={this.state.alert}\n                buttonText={\"Save title\"}\n              />\n            )}\n            {this.state.title !== null && (\n              <Description\n                updateDesc={this.updateDesc.bind(this)}\n                title={this.state.descriptionVal}\n                alert={this.state.descAlert}\n              />\n            )}\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport Top from \"./Top\";\nimport { Helmet } from \"react-helmet\";\n\nexport default class CardsetAnswer extends React.Component {\n  render() {\n    return (\n      <>\n        {\" \"}\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>404 | BrainKwik</title>\n        </Helmet>\n        <Top title={`BrainKwik`} action=\"cancel\" />\n        <Container fluid className=\"fourohfour\">\n          <Row className=\"justify-content-center\">\n            <Col md={6} xs={12} lg={6} xl={6}>\n              You have a 404 error.\n              <br />\n              <br />\n              <Link to={`/home`}>Go to our homepage</Link>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport CardsetEdit from \"./CardsetEdit\";\nimport CardsetAnswer from \"./CardsetAnswer\";\nimport NewCardSet from \"./NewCardSet\";\nimport NoMatch from \"./NoMatch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axiosApiInstance from \"axios\";\n// import {Link, IndexRedirect} from \"react-router\";\n// import {Link, IndexRedirect} from \"react-router\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/\" component={SignIn} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route path=\"/set/yours/:urlString/edit\" component={CardsetEdit} />\n            <Route path=\"/set/yours/:urlString/\" component={CardsetAnswer} />\n            <Route path=\"/set/:urlString/\" componyent={CardsetAnswer} />\n            <Route path=\"/new\" component={NewCardSet} />\n            {/* <Redirect from=\"/\" to=\"/flashcards/#\" /> */}\n            <Route path=\"*\" component={App}>\n                    <Redirect to=\"/\" />\n                </Route>\n            <Route component={NoMatch} />\n          </Switch>\n        </Router>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./setupFirebase\";\nimport \"./index.css\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/flashcardsbg.4227b164.jpg\";"],"sourceRoot":""}